"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[5225],{1274:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"delete-query","title":".delete() method","description":"The .delete() method in Supastash performs soft deletes by default \u2014 meaning it sets a deleted_at timestamp on the affected rows. This keeps the data in the local DB while marking it as deleted for sync and UI purposes. Once synced, row will then be deleted.","source":"@site/docs/delete-query.md","sourceDirName":".","slug":"/delete-query","permalink":"/supastash/docs/delete-query","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/delete-query.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":".update() method","permalink":"/supastash/docs/update-query"},"next":{"title":".upsert() method","permalink":"/supastash/docs/upsert-query"}}');var d=t(4848),l=t(8453);const r={},i=".delete() method",c={},a=[{value:"\ud83e\udde0 How It Works",id:"-how-it-works",level:2},{value:"\u2702\ufe0f Soft vs Hard Deletes",id:"\ufe0f-soft-vs-hard-deletes",level:2},{value:"\ud83d\udd0e Filters Required",id:"-filters-required",level:2},{value:"\ud83d\udd52 Timestamp Handling",id:"-timestamp-handling",level:2},{value:"\ud83d\udd01 Sync Modes",id:"-sync-modes",level:2},{value:"\u2705 Return Shape",id:"-return-shape",level:2},{value:"\u26a0\ufe0f Errors",id:"\ufe0f-errors",level:2},{value:"\u2705 When to Use <code>.delete()</code>",id:"-when-to-use-delete",level:2}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsxs)(s.h1,{id:"delete-method",children:[(0,d.jsx)(s.code,{children:".delete()"})," method"]})}),"\n",(0,d.jsxs)(s.p,{children:["The ",(0,d.jsx)(s.code,{children:".delete()"})," method in Supastash performs ",(0,d.jsx)(s.strong,{children:"soft deletes"})," by default \u2014 meaning it sets a ",(0,d.jsx)(s.code,{children:"deleted_at"})," timestamp on the affected rows. This keeps the data in the local DB while marking it as deleted for sync and UI purposes. Once synced, row will then be deleted."]}),"\n",(0,d.jsxs)(s.blockquote,{children:["\n",(0,d.jsxs)(s.p,{children:["\u26a0\ufe0f Supastash does ",(0,d.jsx)(s.strong,{children:"not"})," permanently delete data until it's synced to remote db."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-how-it-works",children:"\ud83e\udde0 How It Works"}),"\n",(0,d.jsxs)(s.p,{children:["When you call ",(0,d.jsx)(s.code,{children:".delete()"}),":"]}),"\n",(0,d.jsxs)(s.ol,{children:["\n",(0,d.jsxs)(s.li,{children:["Filters are validated and used to construct a ",(0,d.jsx)(s.code,{children:"WHERE"})," clause."]}),"\n",(0,d.jsx)(s.li,{children:"Supastash selects matching rows."}),"\n",(0,d.jsxs)(s.li,{children:["Those rows are updated locally to include ",(0,d.jsx)(s.code,{children:"deleted_at"}),", ",(0,d.jsx)(s.code,{children:"updated_at"}),", and ",(0,d.jsx)(s.code,{children:"synced_at"})," timestamps."]}),"\n",(0,d.jsxs)(s.li,{children:["The update is queued for sync (unless in ",(0,d.jsx)(s.code,{children:"localOnly"})," mode)."]}),"\n",(0,d.jsx)(s.li,{children:"Once synced, data is immediately deleted from the db."}),"\n"]}),"\n",(0,d.jsxs)(s.blockquote,{children:["\n",(0,d.jsxs)(s.p,{children:["\u26a1 Like ",(0,d.jsx)(s.code,{children:".insert()"})," and ",(0,d.jsx)(s.code,{children:".update()"}),", Supastash uses a ",(0,d.jsx)(s.strong,{children:"debounced version tracker"})," to batch deletes and trigger a ",(0,d.jsx)(s.strong,{children:"single UI refresh per table"}),"."]}),"\n"]}),"\n",(0,d.jsxs)(s.blockquote,{children:["\n",(0,d.jsxs)(s.p,{children:["\ud83d\udd04 Once a delete operation is successfully synced, the row is ",(0,d.jsx)(s.strong,{children:"immediately removed from the local DB"}),". Data is ",(0,d.jsx)(s.strong,{children:"never deleted from the remote DB"})," \u2014 only soft-deleted using a ",(0,d.jsx)(s.code,{children:"deleted_at"})," timestamp."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"\ufe0f-soft-vs-hard-deletes",children:"\u2702\ufe0f Soft vs Hard Deletes"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"Soft Delete (default)"}),":"]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["Sets ",(0,d.jsx)(s.code,{children:"deleted_at"}),", retains row in DB"]}),"\n",(0,d.jsxs)(s.li,{children:["Used in ",(0,d.jsx)(s.code,{children:".delete()"})," calls with filters"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:["\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"Hard Delete"}),":"]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Fully removes matching rows from the table"}),"\n",(0,d.jsxs)(s.li,{children:["Used internally when required by sync logic or explicitly via ",(0,d.jsx)(s.code,{children:"permanentlyDeleteData()"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:'await supastash.from("tasks").delete().eq("id", "task_1").run();\n'})}),"\n",(0,d.jsxs)(s.p,{children:["This will soft-delete the task but leave it available locally with a ",(0,d.jsx)(s.code,{children:"deleted_at"})," timestamp."]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-filters-required",children:"\ud83d\udd0e Filters Required"}),"\n",(0,d.jsxs)(s.p,{children:["All ",(0,d.jsx)(s.code,{children:".delete()"})," calls require at least one filter:"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:'.delete().eq("project_id", "proj_123")\n'})}),"\n",(0,d.jsx)(s.p,{children:"This ensures safe, scoped deletes and prevents accidental wipes."}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-timestamp-handling",children:"\ud83d\udd52 Timestamp Handling"}),"\n",(0,d.jsx)(s.p,{children:"The following timestamps are added automatically:"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"deleted_at"}),": when the row was soft-deleted"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"updated_at"}),": current time"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-sync-modes",children:"\ud83d\udd01 Sync Modes"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Mode"}),(0,d.jsx)(s.th,{children:"Behavior"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"localOnly"})}),(0,d.jsxs)(s.td,{children:["Sets ",(0,d.jsx)(s.code,{children:"deleted_at"})," locally and hard deletes in same call"]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"remoteOnly"})}),(0,d.jsx)(s.td,{children:"Sends soft delete to Supabase only, no local touch"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"localFirst"})}),(0,d.jsx)(s.td,{children:"(Default) Soft deletes locally, queues sync to Supabase"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"remoteFirst"})}),(0,d.jsx)(s.td,{children:"Sends delete to Supabase, then applies soft delete locally"})]})]})]}),"\n",(0,d.jsxs)(s.p,{children:["You can use ",(0,d.jsx)(s.code,{children:'.syncMode("...")'})," to control this behavior."]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-return-shape",children:"\u2705 Return Shape"}),"\n",(0,d.jsx)(s.p,{children:"Always returns the rows that matched the filters before they were marked deleted:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"{\n  data: null,\n  error: null,\n  success: true\n}\n"})}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"\ufe0f-errors",children:"\u26a0\ufe0f Errors"}),"\n",(0,d.jsx)(s.p,{children:"If filters are missing or malformed, or the operation fails:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:'{\n  data: null,\n  error: { message: "..." },\n  success: false\n}\n'})}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsxs)(s.h2,{id:"-when-to-use-delete",children:["\u2705 When to Use ",(0,d.jsx)(s.code,{children:".delete()"})]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Removing rows"}),"\n",(0,d.jsx)(s.li,{children:"Marking items as deleted while retaining structure for re-sync"}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsxs)(s.p,{children:["Next: ",(0,d.jsx)(s.a,{href:"/supastash/docs/upsert-query",children:(0,d.jsx)(s.code,{children:".upsert()"})})]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>i});var n=t(6540);const d={},l=n.createContext(d);function r(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);