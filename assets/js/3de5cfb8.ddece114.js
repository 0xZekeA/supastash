"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[2061],{7060:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"supastash-query-builder","title":"Supastash Query Builder","description":"Supastash provides a powerful, chainable query builder designed for local-first CRUD operations in SQLite with optional Supabase sync. Inspired by Supabase\u2019s API, it mimics the same method chaining you\u2019re already familiar with \u2014 making it intuitive to adopt.","source":"@site/docs/supastash-query-builder.md","sourceDirName":".","slug":"/supastash-query-builder","permalink":"/supastash/docs/supastash-query-builder","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/supastash-query-builder.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/supastash/docs/getting-started"},"next":{"title":"Run executions","permalink":"/supastash/docs/run-executions"}}');var i=n(4848),t=n(8453);const l={},d="Supastash Query Builder",c={},a=[{value:"\ud83e\uddf1 How the Query Builder Works",id:"-how-the-query-builder-works",level:2},{value:"\ud83c\udf10 Local-First by Default",id:"-local-first-by-default",level:2},{value:"\ud83d\udd04 Sync Behavior",id:"-sync-behavior",level:2},{value:"\ud83d\udd0e Supported Filter Methods",id:"-supported-filter-methods",level:2},{value:"\u2705 Safe Operations and Events",id:"-safe-operations-and-events",level:2},{value:"\ud83d\udccc Summary",id:"-summary",level:2}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"supastash-query-builder",children:"Supastash Query Builder"})}),"\n",(0,i.jsxs)(s.p,{children:["Supastash provides a powerful, chainable query builder designed for ",(0,i.jsx)(s.strong,{children:"local-first CRUD operations"})," in SQLite with optional Supabase sync. Inspired by Supabase\u2019s API, it mimics the same method chaining you\u2019re already familiar with \u2014 making it intuitive to adopt."]}),"\n",(0,i.jsx)(s.h2,{id:"-how-the-query-builder-works",children:"\ud83e\uddf1 How the Query Builder Works"}),"\n",(0,i.jsx)(s.p,{children:"At its core, Supastash lets you perform CRUD operations in a structured, chainable manner:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Start the query"}),": ",(0,i.jsx)(s.code,{children:'supastash.from("table")'})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Choose the method"}),": ",(0,i.jsx)(s.a,{href:"/supastash/docs/select-query",children:(0,i.jsx)(s.code,{children:".select()"})}),", ",(0,i.jsx)(s.a,{href:"/supastash/docs/insert-query",children:(0,i.jsx)(s.code,{children:".insert()"})}),", ",(0,i.jsx)(s.a,{href:"/supastash/docs/update-query",children:(0,i.jsx)(s.code,{children:".update()"})}),", ",(0,i.jsx)(s.a,{href:"/supastash/docs/upsert-query",children:(0,i.jsx)(s.code,{children:".upsert()"})}),", or ",(0,i.jsx)(s.a,{href:"/supastash/docs/delete-query",children:(0,i.jsx)(s.code,{children:".delete()"})})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Add filters"}),": Chain ",(0,i.jsx)(s.code,{children:".eq()"}),", ",(0,i.jsx)(s.code,{children:".gt()"}),", ",(0,i.jsx)(s.code,{children:".in()"})," etc., to narrow down results"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Optional tweaks"}),": Add ",(0,i.jsx)(s.code,{children:".limit()"}),", ",(0,i.jsx)(s.code,{children:".single()"}),", or ",(0,i.jsx)(s.code,{children:".syncMode()"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Execute it"}),": Use ",(0,i.jsx)(s.a,{href:"/supastash/docs/run-executions",children:(0,i.jsx)(s.code,{children:".run()"})})," or ",(0,i.jsx)(s.a,{href:"/supastash/docs/run-executions",children:(0,i.jsx)(s.code,{children:".execute()"})})," to trigger the operation"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"It was designed to mirror the Supabase client\u2019s querying style, so if you\u2019ve used Supabase, it\u2019ll feel immediately familiar."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"-local-first-by-default",children:"\ud83c\udf10 Local-First by Default"}),"\n",(0,i.jsxs)(s.p,{children:["Supastash is built on ",(0,i.jsx)(s.strong,{children:"offline-first principles"}),", meaning your app stays responsive \u2014 even without a network."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:".select()"})," reads ",(0,i.jsx)(s.strong,{children:"only from local SQLite"})," by default. To fetch from Supabase instead, use ",(0,i.jsx)(s.code,{children:'syncMode("remoteOnly")'})," or set ",(0,i.jsx)(s.a,{href:"/supastash/docs/run-executions",children:(0,i.jsx)(s.code,{children:"viewRemoteResult: true"})})," in ",(0,i.jsx)(s.code,{children:".run()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/supastash/docs/insert-query",children:(0,i.jsx)(s.code,{children:"insert"})}),", ",(0,i.jsx)(s.a,{href:"/supastash/docs/update-query",children:(0,i.jsx)(s.code,{children:"update"})}),", ",(0,i.jsx)(s.a,{href:"/supastash/docs/upsert-query",children:(0,i.jsx)(s.code,{children:"upsert"})}),", and ",(0,i.jsx)(s.a,{href:"/supastash/docs/delete-query",children:(0,i.jsx)(s.code,{children:"delete"})})," all ",(0,i.jsx)(s.strong,{children:"write locally first"}),", then sync to Supabase automatically."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Want the Supabase result immediately? Pass ",(0,i.jsx)(s.code,{children:"{ viewRemoteResult: true }"})," into ",(0,i.jsx)(s.code,{children:".run()"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["\u26a1\ufe0f ",(0,i.jsxs)(s.strong,{children:["The default ",(0,i.jsx)(s.code,{children:"syncMode"})," is ",(0,i.jsx)(s.code,{children:"localFirst"})]})," \u2014 this gives you fast local reads and writes, while syncing to Supabase quietly in the background."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"-sync-behavior",children:"\ud83d\udd04 Sync Behavior"}),"\n",(0,i.jsxs)(s.p,{children:["Control how each query syncs by setting a ",(0,i.jsx)(s.code,{children:".syncMode()"}),":"]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Mode"}),(0,i.jsx)(s.th,{children:"What it does"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"localOnly"})}),(0,i.jsx)(s.td,{children:"Reads/writes only from the local SQLite database"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"remoteOnly"})}),(0,i.jsx)(s.td,{children:"Talks directly to Supabase, skipping local storage"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"localFirst"})}),(0,i.jsxs)(s.td,{children:[(0,i.jsx)(s.em,{children:"(Default)"})," Uses local first, then syncs in the background"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"remoteFirst"})}),(0,i.jsx)(s.td,{children:"Sends to Supabase first, updates local only if it succeeds"})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:["Syncs are queued, retried with backoff, and track ",(0,i.jsx)(s.code,{children:"synced_at"})," to mark completion."]}),"\n",(0,i.jsx)(s.p,{children:"Depending on execution context and sync options, results are returned as follows:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["\u2705 If ",(0,i.jsx)(s.a,{href:"/supastash/docs/run-executions",children:(0,i.jsx)(s.code,{children:"viewRemoteResult: true"})}),", the result contains:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"{\n  remote: Supabase response or null,\n  local: Local response or null,\n  success: boolean\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["\u2705 For ",(0,i.jsx)(s.code,{children:".delete()"})," operations (without ",(0,i.jsx)(s.code,{children:"viewRemoteResult"}),"):"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"{\n  error: null | error,\n  success: boolean\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"\u2705 For most other operations:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"{\n  data: result from local DB (or remote if remoteOnly),\n  error: null | error,\n  success: boolean\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"These return types ensure predictable access regardless of whether you're handling arrays, single rows, or sync-aware actions."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"-supported-filter-methods",children:"\ud83d\udd0e Supported Filter Methods"}),"\n",(0,i.jsx)(s.p,{children:"Filtering supports common SQL-like operators:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".eq(column, value)"})," \u2013 equals"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".neq(column, value)"})," \u2013 not equals"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".gt(column, value)"})," \u2013 greater than"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".lt(column, value)"})," \u2013 less than"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".gte(column, value)"})," \u2013 greater than or equal"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".lte(column, value)"})," \u2013 less than or equal"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".like(column, value)"})," \u2013 pattern match"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".is(column, value)"})," \u2013 IS NULL / IS TRUE logic"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:".in(column, array)"})," \u2013 IN clause"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Filters can be chained together seamlessly."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"-safe-operations-and-events",children:"\u2705 Safe Operations and Events"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Automatically assigns UUIDs if ",(0,i.jsx)(s.code,{children:"id"})," is missing on insert"]}),"\n",(0,i.jsxs)(s.li,{children:["Throws errors for unsafe patterns (e.g., ",(0,i.jsx)(s.code,{children:".single()"})," with multiple items)"]}),"\n",(0,i.jsx)(s.li,{children:"Emits push events on write operations to update local cache/UI"}),"\n",(0,i.jsxs)(s.li,{children:["Handles ",(0,i.jsx)(s.code,{children:"synced_at"})," timestamps internally for robust syncing"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"-summary",children:"\ud83d\udccc Summary"}),"\n",(0,i.jsx)(s.p,{children:"Supastash Query Builder offers a structured, local-first API that looks and feels like Supabase. It prioritizes offline support and background sync \u2014 so your app stays fast, consistent, and resilient."}),"\n",(0,i.jsxs)(s.p,{children:["Detailed explanations of each method (",(0,i.jsx)(s.code,{children:"insert"}),", ",(0,i.jsx)(s.code,{children:"select"}),", ",(0,i.jsx)(s.code,{children:"update"}),", ",(0,i.jsx)(s.code,{children:"delete"}),", etc.) will follow. For now, this overview covers the core architecture and design philosophy."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:'// Example usage:\nawait supastash.from("users").select().eq("status", "active").run();\n\nawait supastash.from("orders").run();\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Next: ",(0,i.jsx)(s.a,{href:"/supastash/docs/insert-query",children:(0,i.jsx)(s.code,{children:".insert()"})})]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>d});var r=n(6540);const i={},t=r.createContext(i);function l(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);