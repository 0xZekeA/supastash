"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[6052],{3134:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>o,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"useSupastash-hook","title":"Initializing Supastash","description":"\ud83e\udde9 useSupastash","source":"@site/docs/useSupastash-hook.md","sourceDirName":".","slug":"/useSupastash-hook","permalink":"/supastash/docs/useSupastash-hook","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/useSupastash-hook.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Local Sync & Delete Log Utils","permalink":"/supastash/docs/sync-status-manager"},"next":{"title":"useSupastashData","permalink":"/supastash/docs/data-access"}}');var t=n(4848),r=n(8453);const l={},a="Initializing Supastash",d={},c=[{value:"\ud83e\udde9 <code>useSupastash</code>",id:"-usesupastash",level:2},{value:"Overview",id:"overview",level:3},{value:"Responsibilities",id:"responsibilities",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"Internal Behavior (What Happens Under the Hood)",id:"internal-behavior-what-happens-under-the-hood",level:3},{value:"Notes",id:"notes",level:3},{value:"\ud83d\udd17 Other docs?",id:"-other-docs",level:3}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"initializing-supastash",children:"Initializing Supastash"})}),"\n",(0,t.jsxs)(s.h2,{id:"-usesupastash",children:["\ud83e\udde9 ",(0,t.jsx)(s.code,{children:"useSupastash"})]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"function useSupastash(): {\n  dbReady: boolean;\n  startSync: () => void;\n  stopSync: () => void;\n};\n"})}),"\n",(0,t.jsx)(s.h3,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"useSupastash"})," is the main React hook for initializing and managing Supastash. It takes care of:"]}),"\n",(0,t.jsx)(s.h4,{id:"responsibilities",children:"Responsibilities"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["\ud83d\udce6 ",(0,t.jsx)(s.strong,{children:"SQLite Setup"}),": Initializes sync metadata tables."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["\u2699\ufe0f ",(0,t.jsx)(s.strong,{children:"Schema Init Hook"}),": Runs your custom schema setup (e.g., table creation) via ",(0,t.jsx)(s.code,{children:"onSchemaInit"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["\ud83d\udd01 ",(0,t.jsx)(s.strong,{children:"Sync Engine"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Pushes local changes to Supabase"}),"\n",(0,t.jsx)(s.li,{children:"Optionally pulls new data from Supabase based on polling interval"}),"\n",(0,t.jsxs)(s.li,{children:["Automatically triggers sync on app foreground (via ",(0,t.jsx)(s.code,{children:"AppState"}),")"]}),"\n",(0,t.jsx)(s.li,{children:"Prevents overlapping sync cycles"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["This is the ",(0,t.jsx)(s.strong,{children:"only hook"})," you need to call during app startup to get the local-first sync system running."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Property"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"dbReady"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"boolean"})}),(0,t.jsx)(s.td,{children:"Indicates whether Supastash has completed setup and is ready to use"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"startSync"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"() => void"})}),(0,t.jsx)(s.td,{children:"Manually starts the background sync interval"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"stopSync"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"() => void"})}),(0,t.jsx)(s.td,{children:"Stops syncing and cleans up timers and listeners"})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"// _layout.tsx or App.tsx (entry layout)\nconst { dbReady, startSync, stopSync } = useSupastash();\n\nif (!dbReady) return null;\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"internal-behavior-what-happens-under-the-hood",children:"Internal Behavior (What Happens Under the Hood)"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Config Validation"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Checks if ",(0,t.jsx)(s.code,{children:"supabaseClient"}),", ",(0,t.jsx)(s.code,{children:"sqliteClient"}),", and ",(0,t.jsx)(s.code,{children:"sqliteClientType"})," are present in the config."]}),"\n",(0,t.jsx)(s.li,{children:"Logs meaningful errors and disables further setup if missing."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Table Setup"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Creates sync log tables."}),"\n",(0,t.jsxs)(s.li,{children:["Runs your custom ",(0,t.jsx)(s.code,{children:"onSchemaInit()"})," callback, if provided."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Sync Logic"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Starts the sync engine."}),"\n",(0,t.jsxs)(s.li,{children:["Adds an ",(0,t.jsx)(s.code,{children:"AppState"})," listener to trigger a ",(0,t.jsx)(s.strong,{children:"forced sync"})," when the app is foregrounded."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Sync Safety"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Avoid concurrent syncs"}),"\n",(0,t.jsx)(s.li,{children:"Checks if device is online before syncing to avoid unnecessary errors"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"notes",children:"Notes"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["You can manually control sync with ",(0,t.jsx)(s.code,{children:"startSync()"})," and ",(0,t.jsx)(s.code,{children:"stopSync()"})," if needed (e.g., after user login or logout)."]}),"\n",(0,t.jsx)(s.li,{children:"Sync runs in the background and is resilient to intermittent network failures."}),"\n",(0,t.jsxs)(s.li,{children:["Pull sync is optionally \u2014 you must explicitly enable ",(0,t.jsx)(s.code,{children:"syncEngine.pull = true"})," in the Supastash config."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"-other-docs",children:"\ud83d\udd17 Other docs?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/data-access",children:"Data Access docs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/useSupastash-hook",children:"useSupastash docs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/supastash-query-builder",children:"Query Builder docs"})}),"\n"]})]})}function o(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var i=n(6540);const t={},r=i.createContext(t);function l(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);