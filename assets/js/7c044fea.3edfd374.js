"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[261],{7954:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"update-query","title":".update() method","description":"The .update() method in Supastash lets you modify existing rows in a local SQLite table \u2014 with optional sync to Supabase. It mirrors the familiar Supabase API but layers in offline-first behavior and sync logic.","source":"@site/docs/update-query.md","sourceDirName":".","slug":"/update-query","permalink":"/supastash/docs/update-query","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/update-query.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":".select() method","permalink":"/supastash/docs/select-query"},"next":{"title":".delete() method","permalink":"/supastash/docs/delete-query"}}');var d=n(4848),t=n(8453);const l={},a=".update() method",i={},c=[{value:"\ud83e\udde0 How It Works",id:"-how-it-works",level:2},{value:"\u270d\ud83c\udffd Payload Rules",id:"-payload-rules",level:2},{value:"\ud83d\udd0e Filters Required",id:"-filters-required",level:2},{value:"\ud83d\udd52 Timestamp Handling",id:"-timestamp-handling",level:2},{value:"\ud83d\udd01 Sync Modes",id:"-sync-modes",level:2},{value:"\u2705 Return Shape",id:"-return-shape",level:2},{value:"\u26a0\ufe0f Errors",id:"\ufe0f-errors",level:2},{value:"\u2705 When to Use <code>.update()</code>",id:"-when-to-use-update",level:2}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsxs)(s.h1,{id:"update-method",children:[(0,d.jsx)(s.code,{children:".update()"})," method"]})}),"\n",(0,d.jsxs)(s.p,{children:["The ",(0,d.jsx)(s.code,{children:".update()"})," method in Supastash lets you modify existing rows in a local SQLite table \u2014 with optional sync to Supabase. It mirrors the familiar Supabase API but layers in offline-first behavior and sync logic."]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-how-it-works",children:"\ud83e\udde0 How It Works"}),"\n",(0,d.jsxs)(s.p,{children:["When you call ",(0,d.jsx)(s.code,{children:".update()"}),", Supastash:"]}),"\n",(0,d.jsxs)(s.ol,{children:["\n",(0,d.jsx)(s.li,{children:"Validates the target table and payload."}),"\n",(0,d.jsxs)(s.li,{children:["Adds ",(0,d.jsx)(s.code,{children:"updated_at"})," and ",(0,d.jsx)(s.code,{children:"synced_at"})," (if missing)."]}),"\n",(0,d.jsx)(s.li,{children:"Queues the changes for sync if necessary."}),"\n",(0,d.jsx)(s.li,{children:"Returns the updated rows from the local DB."}),"\n"]}),"\n",(0,d.jsxs)(s.blockquote,{children:["\n",(0,d.jsxs)(s.p,{children:["\ud83d\udd01 Like ",(0,d.jsx)(s.a,{href:"/supastash/docs/insert-query",children:(0,d.jsx)(s.code,{children:".insert()"})}),", the ",(0,d.jsx)(s.code,{children:".update()"})," call always returns the updated payload(s) in ",(0,d.jsx)(s.code,{children:"data"}),"."]}),"\n"]}),"\n",(0,d.jsxs)(s.blockquote,{children:["\n",(0,d.jsxs)(s.p,{children:["\u26a1 All non-",(0,d.jsx)(s.code,{children:"select"})," operations (insert, update, delete, upsert) use a ",(0,d.jsx)(s.strong,{children:"debounced version tracker"})," to group rapid updates and trigger a ",(0,d.jsx)(s.strong,{children:"single UI refresh per table"}),". This prevents unnecessary re-renders in high-frequency update scenarios."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-payload-rules",children:"\u270d\ud83c\udffd Payload Rules"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Payload must be a plain object (not null or undefined)"}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"id"})," is ",(0,d.jsx)(s.strong,{children:"not required"}),", since updates are based on filters"]}),"\n"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:'await supastash\n  .from("users")\n  .update<T>({ is_active: false })\n  .eq("role", "admin")\n  .run();\n'})}),"\n",(0,d.jsxs)(s.p,{children:["This disables all users with the role ",(0,d.jsx)(s.code,{children:"admin"}),"."]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-filters-required",children:"\ud83d\udd0e Filters Required"}),"\n",(0,d.jsxs)(s.p,{children:["Updates must include at least one ",(0,d.jsx)(s.code,{children:".eq()"})," or other filters:"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:'.update({ plan: "premium" }).eq("id", "user_123")\n'})}),"\n",(0,d.jsxs)(s.p,{children:["Filters build a ",(0,d.jsx)(s.code,{children:"WHERE"})," clause for targeting specific rows. Without filters, all rows would be updated \u2014 so use cautiously."]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-timestamp-handling",children:"\ud83d\udd52 Timestamp Handling"}),"\n",(0,d.jsx)(s.p,{children:"Supastash auto-manages timestamps:"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["If ",(0,d.jsx)(s.code,{children:"updated_at"})," is missing in the payload, it is added"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-sync-modes",children:"\ud83d\udd01 Sync Modes"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Mode"}),(0,d.jsx)(s.th,{children:"Behavior"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"localOnly"})}),(0,d.jsx)(s.td,{children:"Updates rows in local DB only"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"remoteOnly"})}),(0,d.jsx)(s.td,{children:"Sends the update directly to Supabase, skips local"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"localFirst"})}),(0,d.jsx)(s.td,{children:"(Default) Updates locally, queues Supabase update in background"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"remoteFirst"})}),(0,d.jsx)(s.td,{children:"Updates Supabase first, mirrors to local if successful"})]})]})]}),"\n",(0,d.jsxs)(s.p,{children:["You can set sync behavior using ",(0,d.jsx)(s.code,{children:'.syncMode("...")'}),"."]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"-return-shape",children:"\u2705 Return Shape"}),"\n",(0,d.jsx)(s.p,{children:"Always returns updated local data:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"{\n  data: [...updatedRecords],\n  error: null,\n  success: true\n}\n"})}),"\n",(0,d.jsxs)(s.p,{children:["If no rows matched the filters, ",(0,d.jsx)(s.code,{children:"data"})," will be an empty array."]}),"\n",(0,d.jsxs)(s.p,{children:["If ",(0,d.jsx)(s.code,{children:".single()"})," was used, ",(0,d.jsx)(s.code,{children:"data"})," is a single object instead of an array."]}),"\n",(0,d.jsxs)(s.p,{children:["You can also opt to get Supabase response by passing ",(0,d.jsx)(s.code,{children:"{ viewRemoteResult: true }"})," to ",(0,d.jsx)(s.code,{children:".run()"}),":"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"{\n  local: {...},\n  remote: {...},\n  success: true\n}\n"})}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"\ufe0f-errors",children:"\u26a0\ufe0f Errors"}),"\n",(0,d.jsx)(s.p,{children:"If payload is null or filters are malformed, you\u2019ll get:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:'{\n  data: null,\n  error: { message: "..." },\n  success: false\n}\n'})}),"\n",(0,d.jsx)(s.p,{children:"Errors are logged automatically for debugging."}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsxs)(s.h2,{id:"-when-to-use-update",children:["\u2705 When to Use ",(0,d.jsx)(s.code,{children:".update()"})]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Updating rows with sync"}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsxs)(s.p,{children:["Next: ",(0,d.jsx)(s.a,{href:"/supastash/docs/delete-query",children:(0,d.jsx)(s.code,{children:".delete()"})})]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var r=n(6540);const d={},t=r.createContext(d);function l(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);