"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[7666],{5180:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>i});const l=JSON.parse('{"id":"sync-log-utils","title":"\ud83d\udcda Sync Log Utilities","description":"Supastash tracks createdat, updatedat, and deleted_at checkpoints per table and per filter key.","source":"@site/docs/sync-log-utils.md","sourceDirName":".","slug":"/sync-log-utils","permalink":"/supastash/docs/sync-log-utils","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/sync-log-utils.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Destructive Operations","permalink":"/supastash/docs/destructives"},"next":{"title":"\ud83d\udd04 Manual Refresh","permalink":"/supastash/docs/manual-refreshes"}}');var n=t(4848),r=t(8453);const a={},c="\ud83d\udcda Sync Log Utilities",d={},i=[{value:"Functions",id:"functions",level:2},{value:"\ud83e\uddf9 <code>clearLocalSyncLog(tableName: string)</code>",id:"-clearlocalsynclogtablename-string",level:3},{value:"\ud83d\udd04 <code>clearAllLocalSyncLog()</code>",id:"-clearalllocalsynclog",level:3},{value:"\ud83d\udce5 <code>getSyncLog(tableName: string)</code>",id:"-getsynclogtablename-string",level:3},{value:"\u270d\ufe0f <code>setSyncLog(table: string, filters: RealtimeFilter[] \\| undefined, opts)</code>",id:"\ufe0f-setsynclogtable-string-filters-realtimefilter--undefined-opts",level:3},{value:"\ud83d\udd01 <code>resetSyncLog(table: string, filters?: RealtimeFilter[], scope?: &quot;all&quot; \\| &quot;last_synced_at&quot; \\| &quot;last_created_at&quot; \\| &quot;last_deleted_at&quot;)</code>",id:"-resetsynclogtable-string-filters-realtimefilter-scope-all--last_synced_at--last_created_at--last_deleted_at",level:3},{value:"\ud83d\uddd1 <code>clearSyncLog(table: string, filters?: RealtimeFilter[])</code>",id:"-clearsynclogtable-string-filters-realtimefilter",level:3},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Related",id:"related",level:2}];function o(e){const s={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"-sync-log-utilities",children:"\ud83d\udcda Sync Log Utilities"})}),"\n",(0,n.jsxs)(s.p,{children:["Supastash tracks ",(0,n.jsx)(s.code,{children:"created_at"}),", ",(0,n.jsx)(s.code,{children:"updated_at"}),", and ",(0,n.jsx)(s.code,{children:"deleted_at"})," checkpoints per table and per filter key.",(0,n.jsx)(s.br,{}),"\n","Use these helpers to inspect or update that metadata."]}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:["\ud83d\udca1 These are the ",(0,n.jsx)(s.strong,{children:"supported APIs"})," in newer releases.",(0,n.jsx)(s.br,{}),"\n","Legacy helpers such as ",(0,n.jsx)(s.code,{children:"setLocalSyncLog"})," / ",(0,n.jsx)(s.code,{children:"setLocalDeleteLog"})," are ",(0,n.jsx)(s.strong,{children:"deprecated"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"functions",children:"Functions"}),"\n",(0,n.jsxs)(s.h3,{id:"-clearlocalsynclogtablename-string",children:["\ud83e\uddf9 ",(0,n.jsx)(s.code,{children:"clearLocalSyncLog(tableName: string)"})]}),"\n",(0,n.jsx)(s.p,{children:"Clears the stored sync log for a single table."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'await clearLocalSyncLog("users");\n'})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h3,{id:"-clearalllocalsynclog",children:["\ud83d\udd04 ",(0,n.jsx)(s.code,{children:"clearAllLocalSyncLog()"})]}),"\n",(0,n.jsx)(s.p,{children:"Drops the entire sync-status table and recreates it."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"await clearAllLocalSyncLog();\n"})}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:["\u26a0\ufe0f This removes sync checkpoints for ",(0,n.jsx)(s.strong,{children:"all"})," tables."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h3,{id:"-getsynclogtablename-string",children:["\ud83d\udce5 ",(0,n.jsx)(s.code,{children:"getSyncLog(tableName: string)"})]}),"\n",(0,n.jsx)(s.p,{children:"Returns the stored sync status for one table."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'const log = await getSyncLog("users");\n\n/*\n{\n  table_name: "users",\n  last_synced_at: "2024-06-01T10:00:00.000Z",\n  last_created_at: "2024-06-01T10:00:00.000Z",\n  last_deleted_at: "2024-06-01T10:00:00.000Z",\n  filter_key: "abc123",\n  filter_json: "[...]",\n  updated_at: "2024-06-01T10:00:00.000Z"\n}\n*/\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Returns ",(0,n.jsx)(s.code,{children:"null"})," if the table has no entry."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h3,{id:"\ufe0f-setsynclogtable-string-filters-realtimefilter--undefined-opts",children:["\u270d\ufe0f ",(0,n.jsx)(s.code,{children:"setSyncLog(table: string, filters: RealtimeFilter[] \\| undefined, opts)"})]}),"\n",(0,n.jsx)(s.p,{children:"Writes (or updates) sync metadata for a table."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'await setSyncLog("users", undefined, {\n  lastSyncedAt: new Date().toISOString(),\n  lastCreatedAt: new Date().toISOString(),\n  lastDeletedAt: null, // optional\n});\n'})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"Options"})}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Field"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"lastSyncedAt"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsxs)(s.td,{children:["Highest ",(0,n.jsx)(s.code,{children:"updated_at"})," pulled for this table."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"lastCreatedAt"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsxs)(s.td,{children:["Highest ",(0,n.jsx)(s.code,{children:"created_at"})," pulled."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"lastDeletedAt"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsxs)(s.td,{children:["Highest ",(0,n.jsx)(s.code,{children:"deleted_at"})," pulled (for soft-deletes)."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"filterNamespace"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsx)(s.td,{children:"Optional namespace to separate different filter sets."})]})]})]}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"When you supply filters, a filter key is computed and stored along with the timestamps."}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h3,{id:"-resetsynclogtable-string-filters-realtimefilter-scope-all--last_synced_at--last_created_at--last_deleted_at",children:["\ud83d\udd01 ",(0,n.jsx)(s.code,{children:'resetSyncLog(table: string, filters?: RealtimeFilter[], scope?: "all" \\| "last_synced_at" \\| "last_created_at" \\| "last_deleted_at")'})]}),"\n",(0,n.jsx)(s.p,{children:"Resets one or more timestamps for a table."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'// Reset everything for "users"\nawait resetSyncLog("users", undefined, "all");\n\n// Only reset "last_deleted_at"\nawait resetSyncLog("users", undefined, "last_deleted_at");\n'})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"scope"})," can be:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:'"all"'})," (default) \u2013 resets created, updated, and deleted checkpoints."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:'"last_synced_at"'})," \u2013 resets only the \u201cupdated\u201d timestamp."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:'"last_created_at"'})," \u2013 resets only the \u201ccreated\u201d timestamp."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:'"last_deleted_at"'})," \u2013 resets only the \u201cdeleted\u201d timestamp."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h3,{id:"-clearsynclogtable-string-filters-realtimefilter",children:["\ud83d\uddd1 ",(0,n.jsx)(s.code,{children:"clearSyncLog(table: string, filters?: RealtimeFilter[])"})]}),"\n",(0,n.jsx)(s.p,{children:"Removes the sync status row for a table + filter key."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'await clearSyncLog("users");\n'})}),"\n",(0,n.jsxs)(s.p,{children:["If you pass filters, only that key is cleared.",(0,n.jsx)(s.br,{}),"\n","If no filters are provided, all rows for the table are removed."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["These helpers manage rows in the internal ",(0,n.jsx)(s.code,{children:"supastash_sync_marks"})," table."]}),"\n",(0,n.jsx)(s.li,{children:"They are safe to call on demand (e.g., to reset a table during testing)."}),"\n",(0,n.jsx)(s.li,{children:"For production sync flows, you normally won\u2019t touch these directly\u2014Supastash updates them automatically after pulls/pushes."}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"related",children:"Related"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/supastash/docs/useSupastashSyncStatus",children:"useSupastashFilters"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/supastash/docs/useSupastashFilters",children:"useSupastashFilters"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/supastash/docs/sync-flows",children:"Pulling & pushing data"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>c});var l=t(6540);const n={},r=l.createContext(n);function a(e){const s=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),l.createElement(r.Provider,{value:s},e.children)}}}]);