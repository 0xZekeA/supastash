"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[9623],{7353:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"useSupastashSyncStatus","title":"\ud83e\udded useSupastashSyncStatus","description":"useSupastashSyncStatus(debounceMs?) gives you live visibility into Supastash\'s sync process \u2014 both push (local \u2192 server) and pull (server \u2192 local).","source":"@site/docs/useSupastashSyncStatus.md","sourceDirName":".","slug":"/useSupastashSyncStatus","permalink":"/supastash/docs/useSupastashSyncStatus","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/useSupastashSyncStatus.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"useSupastashData","permalink":"/supastash/docs/useSupastashData"},"next":{"title":"useSupastashFilters","permalink":"/supastash/docs/useSupastashFilters"}}');var r=n(4848),a=n(8453);const c={},l="\ud83e\udded useSupastashSyncStatus",i={},d=[{value:"\ud83d\udd0d Overview",id:"-overview",level:2},{value:"Parameters",id:"parameters",level:3},{value:"\u2699\ufe0f Example",id:"\ufe0f-example",level:2},{value:"\ud83e\udde0 SyncInfo Structure",id:"-syncinfo-structure",level:2},{value:"\ud83d\udce6 Returned Values",id:"-returned-values",level:2},{value:"\ud83d\udca1 Common Use Cases",id:"-common-use-cases",level:2},{value:"\u26a0\ufe0f Notes",id:"\ufe0f-notes",level:2},{value:"\u2705 Summary",id:"-summary",level:2}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"-usesupastashsyncstatus",children:"\ud83e\udded useSupastashSyncStatus"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"useSupastashSyncStatus(debounceMs?)"})," gives you ",(0,r.jsx)(s.strong,{children:"live visibility"})," into Supastash's sync process \u2014 both ",(0,r.jsx)(s.strong,{children:"push"})," (local \u2192 server) and ",(0,r.jsx)(s.strong,{children:"pull"})," (server \u2192 local)."]}),"\n",(0,r.jsx)(s.p,{children:'Use it to show syncing banners, badges, progress indicators, or "last synced" timestamps in your UI.'}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"-overview",children:"\ud83d\udd0d Overview"}),"\n",(0,r.jsx)(s.p,{children:"This hook subscribes to Supastash's internal event bus and returns two reactive values:"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Key"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"syncStatus"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:'"pending" | "error" | "synced"'})}),(0,r.jsx)(s.td,{children:"Overall sync summary across all tables"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"syncInfo"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#-syncinfo-structure",children:(0,r.jsx)(s.code,{children:"SyncInfo"})})}),(0,r.jsx)(s.td,{children:"Detailed per-table sync info, including progress and logs"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Parameter"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Default"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"debounceMs"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"number"})," (optional)"]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"40"})}),(0,r.jsx)(s.td,{children:"Milliseconds to debounce sync status updates"})]})})]}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:["\u23f1\ufe0f Updates are ",(0,r.jsx)(s.strong,{children:"debounced (40 ms by default)"})," to prevent unnecessary re-renders when sync events fire rapidly. You can customize this value based on your needs."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"\ufe0f-example",children:"\u2699\ufe0f Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-tsx",children:'import { useSupastashSyncStatus } from "supastash";\n\nexport function SyncBanner() {\n  const { syncStatus, syncInfo } = useSupastashSyncStatus();\n\n  if (syncStatus === "pending") return <Banner text="Syncing changes\u2026" />;\n  if (syncStatus === "error")\n    return <Banner text="Sync error \u2014 tap to retry" />;\n  if (syncStatus === "synced") return <Banner text="All data synced \u2705" />;\n\n  return null;\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:"You can also show progress:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-tsx",children:"const progress = Math.round(\n  (syncInfo.push.tablesCompleted / syncInfo.push.numberOfTables) * 100\n);\n\n<Text>Push Sync Progress: {progress}%</Text>;\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"-syncinfo-structure",children:"\ud83e\udde0 SyncInfo Structure"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-tsx",children:"{\n  pull: {\n    inProgress: boolean;\n    numberOfTables: number;\n    tablesCompleted: number;\n    currentTable: {\n      name: string;\n      unsyncedDataCount: number;\n      unsyncedDeletedCount: number;\n    };\n    lastSyncedAt: number;\n    lastSyncLog: SyncLogEntry[];\n  };\n  push: {\n    inProgress: boolean;\n    numberOfTables: number;\n    tablesCompleted: number;\n    currentTable: {\n      name: string;\n      unsyncedDataCount: number;\n      unsyncedDeletedCount: number;\n    };\n    lastSyncedAt: number;\n    lastSyncLog: SyncLogEntry[];\n  };\n}\n"})}),"\n",(0,r.jsx)(s.p,{children:"Each section (pull / push) tracks its own progress, logs, and last sync timestamp."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"-returned-values",children:"\ud83d\udce6 Returned Values"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"syncStatus"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:'"pending" | "error" | "synced"'})}),(0,r.jsx)(s.td,{children:"Overall sync health across all tables"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"syncInfo.pull"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SyncInfoItem"})}),(0,r.jsx)(s.td,{children:"Details for pull operations"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"syncInfo.push"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SyncInfoItem"})}),(0,r.jsx)(s.td,{children:"Details for push operations"})]})]})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"-common-use-cases",children:"\ud83d\udca1 Common Use Cases"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:'Display "Syncing\u2026" or "Offline changes pending" banners.'}),"\n",(0,r.jsx)(s.li,{children:"Disable UI actions while push or pull is in progress."}),"\n",(0,r.jsx)(s.li,{children:"Show a timestamp of when data was last synced."}),"\n",(0,r.jsx)(s.li,{children:"Track per-table progress in a developer dashboard or diagnostics screen."}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"\ufe0f-notes",children:"\u26a0\ufe0f Notes"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"The hook is safe to use anywhere in your app \u2014 it's globally reactive."}),"\n",(0,r.jsx)(s.li,{children:"It automatically subscribes and unsubscribes from Supastash's event bus."}),"\n",(0,r.jsx)(s.li,{children:"Updates are debounced (40 ms) for performance; you'll get near-realtime info without flicker."}),"\n",(0,r.jsx)(s.li,{children:"This hook does not trigger sync \u2014 it only observes state."}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"-summary",children:"\u2705 Summary"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"useSupastashSyncStatus()"})," is your window into Supastash's sync engine \u2014 giving you live, reliable feedback on what's happening behind the scenes."]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>l});var t=n(6540);const r={},a=t.createContext(r);function c(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);