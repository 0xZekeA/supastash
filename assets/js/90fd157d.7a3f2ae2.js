"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[7777],{5411:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"useSupastashLiteQuery","title":"useSupastashLiteQuery","description":"\ud83e\udde9 useSupastashLiteQuery (\u26a0\ufe0f NOT READY FOR RELEASE)","source":"@site/docs/useSupastashLiteQuery.md","sourceDirName":".","slug":"/useSupastashLiteQuery","permalink":"/supastash/docs/useSupastashLiteQuery","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/useSupastashLiteQuery.md","tags":[],"version":"current","frontMatter":{}}');var t=n(4848),i=n(8453);const a={},l=void 0,o={},d=[{value:"\ud83e\udde9 <code>useSupastashLiteQuery</code> (\u26a0\ufe0f NOT READY FOR RELEASE)",id:"-usesupastashlitequery-\ufe0f-not-ready-for-release",level:2},{value:"\u2705 Ideal For",id:"-ideal-for",level:3},{value:"\u2699\ufe0f What It Offers",id:"\ufe0f-what-it-offers",level:3},{value:"\u26a0\ufe0f A Few Things to Know",id:"\ufe0f-a-few-things-to-know",level:3},{value:"\ud83e\uddea Example",id:"-example",level:3},{value:"\ud83e\udde0 Behind the Scenes",id:"-behind-the-scenes",level:3},{value:"\ud83d\udee1\ufe0f Built to Handle Edge Cases",id:"\ufe0f-built-to-handle-edge-cases",level:3},{value:"\ud83d\udce6 What You Get",id:"-what-you-get",level:3},{value:"\ud83e\uddfc Tips for Using It",id:"-tips-for-using-it",level:3},{value:"\ud83d\udcac Why Use This",id:"-why-use-this",level:3},{value:"\ud83d\udd17 What\u2019s Next",id:"-whats-next",level:2}];function h(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.h2,{id:"-usesupastashlitequery-\ufe0f-not-ready-for-release",children:["\ud83e\udde9 ",(0,t.jsx)(s.code,{children:"useSupastashLiteQuery"})," (\u26a0\ufe0f NOT READY FOR RELEASE)"]}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.strong,{children:"lightweight, local-first hook"})," made for ",(0,t.jsx)(s.strong,{children:"offline-friendly React Native apps"})," using SQLite via Supastash. Think of it as a trimmed-down version of ",(0,t.jsx)(s.code,{children:"useSupastashData"})," \u2014 no realtime updates, no global caching, just ",(0,t.jsx)(s.strong,{children:"full control"})," over filtering, pagination, and memory usage."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"-ideal-for",children:"\u2705 Ideal For"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["When you want to ",(0,t.jsx)(s.strong,{children:"control exactly what loads and when"})]}),"\n",(0,t.jsxs)(s.li,{children:["If you're skipping ",(0,t.jsx)(s.strong,{children:"Supabase Realtime"})," for performance, simplicity, or to save memory"]}),"\n",(0,t.jsxs)(s.li,{children:["Building ",(0,t.jsx)(s.strong,{children:"infinite scroll lists"})," (e.g., FlatList) where you load data in chunks"]}),"\n",(0,t.jsxs)(s.li,{children:["Manually handling ",(0,t.jsx)(s.strong,{children:"refresh"})," and ",(0,t.jsx)(s.strong,{children:"load more"})," behavior"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"\ufe0f-what-it-offers",children:"\u2699\ufe0f What It Offers"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Offset-based pagination with ",(0,t.jsx)(s.code,{children:"loadMore()"})]}),"\n",(0,t.jsxs)(s.li,{children:["Manual refresh with ",(0,t.jsx)(s.code,{children:"refresh()"})]}),"\n",(0,t.jsx)(s.li,{children:"SQL-safe filters and sorting"}),"\n",(0,t.jsxs)(s.li,{children:["Soft-deletes handled out of the box (",(0,t.jsx)(s.code,{children:"deleted_at IS NULL"}),")"]}),"\n",(0,t.jsxs)(s.li,{children:["Auto-reloads on ",(0,t.jsx)(s.code,{children:"liteQueryRefresh:<table>"})," events"]}),"\n",(0,t.jsxs)(s.li,{children:["Clean result shape: flat ",(0,t.jsx)(s.code,{children:"data"})," array + ",(0,t.jsx)(s.code,{children:"dataMap"})," keyed by row ",(0,t.jsx)(s.code,{children:"id"})]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"\ufe0f-a-few-things-to-know",children:"\u26a0\ufe0f A Few Things to Know"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Your table must have a ",(0,t.jsxs)(s.strong,{children:["string ",(0,t.jsx)(s.code,{children:"id"})," column"]})," \u2014 it\u2019s how we keep things deduplicated."]}),"\n",(0,t.jsxs)(s.li,{children:["Filters must be passed in Supastash\u2019s ",(0,t.jsx)(s.strong,{children:"SQL-safe format"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"-example",children:"\ud83e\uddea Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",children:'const { data, loadMore, refresh, isLoading, hasMore } =\n  useSupastashLiteQuery<Order>("orders", {\n    sqlFilter: [{ column: "shop_id", operator: "eq", value: activeShopId }],\n    pageSize: 30,\n    orderBy: "created_at",\n    orderDesc: true,\n  });\n\n<FlatList\n  data={data}\n  keyExtractor={(item) => item.id}\n  renderItem={({ item }) => <OrderCard item={item} />}\n  onEndReached={loadMore}\n  onRefresh={refresh}\n  refreshing={isLoading}\n  ListFooterComponent={hasMore && isLoading ? <ActivityIndicator /> : null}\n/>;\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"-behind-the-scenes",children:"\ud83e\udde0 Behind the Scenes"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Uses ",(0,t.jsx)(s.code,{children:"useReducer"})," instead of ",(0,t.jsx)(s.code,{children:"useState"})," for cleaner state transitions across pages"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Filters are pre-built once on mount or when ",(0,t.jsx)(s.code,{children:"sqlFilter"})," changes"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Tracks each request so older responses don\u2019t override fresh ones"}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Handles pagination smartly:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"loadMore()"})," fetches the next page"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"refresh()"})," resets to page 0 and reloads"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"\ufe0f-built-to-handle-edge-cases",children:"\ud83d\udee1\ufe0f Built to Handle Edge Cases"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Prevents overlapping fetches (no double loads if you tap fast)"}),"\n",(0,t.jsx)(s.li,{children:"Handles rapid refresh/loadMore calls without messing up state"}),"\n",(0,t.jsx)(s.li,{children:"Ignores stale requests \u2014 only the latest response updates the UI"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"-what-you-get",children:"\ud83d\udce6 What You Get"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"{\n  data: R[];                  // Your result rows\n  dataMap: Map<string, R>;   // Map with rows keyed by ID\n  loadMore: () => void;      // Fetch next page\n  refresh: () => void;       // Reload from scratch\n  hasMore: boolean;          // True if more data to load\n  isLoading: boolean;        // Whether it's fetching now\n  error: string | null;      // Any error message\n}\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"-tips-for-using-it",children:"\ud83e\uddfc Tips for Using It"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Always pass a proper ",(0,t.jsx)(s.code,{children:"sqlFilter"})," \u2014 there's no server-side RLS fallback here"]}),"\n",(0,t.jsxs)(s.li,{children:["Works great with ",(0,t.jsx)(s.code,{children:"FlatList"})," and other paginated scroll UIs"]}),"\n",(0,t.jsx)(s.li,{children:"If you mutate data, trigger a refresh manually to reflect changes"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"-why-use-this",children:"\ud83d\udcac Why Use This"}),"\n",(0,t.jsxs)(s.p,{children:["This hook is for ",(0,t.jsx)(s.strong,{children:"predictable, controlled data loading"}),". Nothing updates behind the scenes unless you tell it to. No surprises.\nIf you want realtime syncing and shared state across screens, go with ",(0,t.jsx)(s.code,{children:"useSupastashData"}),".\nBut if you want ",(0,t.jsx)(s.strong,{children:"fast, minimal, and manual"}),", this one\u2019s built for you."]}),"\n",(0,t.jsx)(s.h2,{id:"-whats-next",children:"\ud83d\udd17 What\u2019s Next"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/configuration",children:"Configuration Guide"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/supastash-query-builder",children:"Query Builder Docs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/useSupastash-hook",children:"Hook Reference"})}),"\n"]})]})}function c(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>l});var r=n(6540);const t={},i=r.createContext(t);function a(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);