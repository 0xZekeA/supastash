"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[7890],{1591:(e,l,s)=>{s.r(l),s.d(l,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"sync-status-manager","title":"\u26a0\ufe0f Deprecated \u2014 Local Sync & Delete Log Utilities","description":"Status: Deprecated in newer releases","source":"@site/docs/sync-status-manager.md","sourceDirName":".","slug":"/sync-status-manager","permalink":"/supastash/docs/sync-status-manager","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/sync-status-manager.md","tags":[],"version":"current","frontMatter":{}}');var c=s(4848),t=s(8453);const r={},a="\u26a0\ufe0f Deprecated \u2014 Local Sync & Delete Log Utilities",d={},o=[{value:"Functions",id:"functions",level:2},{value:"\ud83d\udce4 <code>setLocalSyncLog(tableName: string, lastSyncedAt: string, lastCreatedAt?: string)</code>",id:"-setlocalsynclogtablename-string-lastsyncedat-string-lastcreatedat-string",level:3},{value:"\ud83d\udce5 <code>getLocalSyncLog(tableName: string)</code>",id:"-getlocalsynclogtablename-string",level:3},{value:"\ud83e\uddf9 <code>clearLocalSyncLog(tableName: string)</code>",id:"-clearlocalsynclogtablename-string",level:3},{value:"\ud83d\udd04 <code>clearAllLocalSyncLog()</code>",id:"-clearalllocalsynclog",level:3},{value:"\ud83d\uddd1 <code>setLocalDeleteLog(tableName: string, lastDeletedAt: string)</code>",id:"-setlocaldeletelogtablename-string-lastdeletedat-string",level:3},{value:"\ud83d\udd0d <code>getLocalDeleteLog(tableName: string)</code>",id:"-getlocaldeletelogtablename-string",level:3},{value:"\ud83e\uddfc <code>clearLocalDeleteLog(tableName: string)</code>",id:"-clearlocaldeletelogtablename-string",level:3},{value:"\u274c <code>clearAllLocalDeleteLog()</code>",id:"-clearalllocaldeletelog",level:3},{value:"Migration Guide",id:"migration-guide",level:2},{value:"Why Deprecated?",id:"why-deprecated",level:2},{value:"Related Docs",id:"related-docs",level:2}];function i(e){const l={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(l.header,{children:(0,c.jsx)(l.h1,{id:"\ufe0f-deprecated--local-sync--delete-log-utilities",children:"\u26a0\ufe0f Deprecated \u2014 Local Sync & Delete Log Utilities"})}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Status:"})," Deprecated in newer releases",(0,c.jsx)(l.br,{}),"\n","These helpers were early internals and are ",(0,c.jsx)(l.strong,{children:"not recommended for production"}),".",(0,c.jsx)(l.br,{}),"\n","Use the unified APIs instead: ",(0,c.jsx)(l.code,{children:"getSyncLog"}),", ",(0,c.jsx)(l.code,{children:"setSyncLog"}),", ",(0,c.jsx)(l.code,{children:"clearSyncLog"}),"."]}),"\n"]}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsx)(l.h2,{id:"functions",children:"Functions"}),"\n",(0,c.jsxs)(l.h3,{id:"-setlocalsynclogtablename-string-lastsyncedat-string-lastcreatedat-string",children:["\ud83d\udce4 ",(0,c.jsx)(l.code,{children:"setLocalSyncLog(tableName: string, lastSyncedAt: string, lastCreatedAt?: string)"})]}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Deprecated:"})," Use ",(0,c.jsx)(l.code,{children:"setSyncLog"}),"."]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"Stores the latest sync timestamps for a table."}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-ts",children:'await setLocalSyncLog("users", new Date().toISOString());\n'})}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsxs)(l.h3,{id:"-getlocalsynclogtablename-string",children:["\ud83d\udce5 ",(0,c.jsx)(l.code,{children:"getLocalSyncLog(tableName: string)"})]}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Deprecated:"})," Use ",(0,c.jsx)(l.code,{children:"getSyncLog"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(l.p,{children:["Returns the stored sync log for a table, or ",(0,c.jsx)(l.code,{children:"null"})," if none exists."]}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-ts",children:'const log = await getLocalSyncLog("users");\n/*\n{\n  table_name: "users",\n  lastSyncedAt: "2024-06-01T10:00:00.000Z"\n}\n*/\n'})}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsxs)(l.h3,{id:"-clearlocalsynclogtablename-string",children:["\ud83e\uddf9 ",(0,c.jsx)(l.code,{children:"clearLocalSyncLog(tableName: string)"})]}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Deprecated:"})," Use ",(0,c.jsx)(l.code,{children:"clearSyncLog"}),"."]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"Deletes the sync log for one table."}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-ts",children:'await clearLocalSyncLog("users");\n'})}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsxs)(l.h3,{id:"-clearalllocalsynclog",children:["\ud83d\udd04 ",(0,c.jsx)(l.code,{children:"clearAllLocalSyncLog()"})]}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Deprecated:"})," Use ",(0,c.jsx)(l.code,{children:"clearSyncLog"})," with a global/all-tables scope."]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"Clears all stored sync logs."}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-ts",children:"await clearAllLocalSyncLog();\n"})}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsx)(l.p,{children:"\u26a0\ufe0f This clears sync history for every table."}),"\n"]}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsxs)(l.h3,{id:"-setlocaldeletelogtablename-string-lastdeletedat-string",children:["\ud83d\uddd1 ",(0,c.jsx)(l.code,{children:"setLocalDeleteLog(tableName: string, lastDeletedAt: string)"})]}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Deprecated:"})," Use ",(0,c.jsx)(l.code,{children:"setSyncLog"})," (pass ",(0,c.jsx)(l.code,{children:"lastDeletedAt"}),")."]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"Stores the last delete checkpoint for a table."}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-ts",children:'await setLocalDeleteLog("users", new Date().toISOString());\n'})}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsxs)(l.h3,{id:"-getlocaldeletelogtablename-string",children:["\ud83d\udd0d ",(0,c.jsx)(l.code,{children:"getLocalDeleteLog(tableName: string)"})]}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Deprecated:"})," Use ",(0,c.jsx)(l.code,{children:"getSyncLog"}),"."]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"Retrieves the stored delete timestamp for a table."}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-ts",children:'const del = await getLocalDeleteLog("users");\n/*\n{\n  table_name: "users",\n  lastDeletedAt: "2024-06-01T10:00:00.000Z"\n}\n*/\n'})}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsxs)(l.h3,{id:"-clearlocaldeletelogtablename-string",children:["\ud83e\uddfc ",(0,c.jsx)(l.code,{children:"clearLocalDeleteLog(tableName: string)"})]}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Deprecated:"})," Use ",(0,c.jsx)(l.code,{children:"clearSyncLog"}),"."]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"Clears the delete log for one table."}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-ts",children:'await clearLocalDeleteLog("users");\n'})}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsxs)(l.h3,{id:"-clearalllocaldeletelog",children:["\u274c ",(0,c.jsx)(l.code,{children:"clearAllLocalDeleteLog()"})]}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsxs)(l.p,{children:[(0,c.jsx)(l.strong,{children:"Deprecated:"})," Use ",(0,c.jsx)(l.code,{children:"clearSyncLog"})," with a global/all-tables scope."]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"Deletes all delete checkpoints."}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-ts",children:"await clearAllLocalDeleteLog();\n"})}),"\n",(0,c.jsxs)(l.blockquote,{children:["\n",(0,c.jsx)(l.p,{children:"\u26a0\ufe0f This wipes delete history for every table."}),"\n"]}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsx)(l.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,c.jsxs)(l.table,{children:[(0,c.jsx)(l.thead,{children:(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.th,{children:"Old helper"}),(0,c.jsx)(l.th,{children:"Replacement"})]})}),(0,c.jsxs)(l.tbody,{children:[(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"setLocalSyncLog"})}),(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"setSyncLog"})})]}),(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"getLocalSyncLog"})}),(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"getSyncLog"})})]}),(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"clearLocalSyncLog"})}),(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"clearSyncLog"})})]}),(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"clearAllLocalSyncLog"})}),(0,c.jsxs)(l.td,{children:[(0,c.jsx)(l.code,{children:"clearSyncLog"})," (global/all scope)"]})]}),(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"setLocalDeleteLog"})}),(0,c.jsxs)(l.td,{children:[(0,c.jsx)(l.code,{children:"setSyncLog"})," (",(0,c.jsx)(l.code,{children:"lastDeletedAt"}),")"]})]}),(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"getLocalDeleteLog"})}),(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"getSyncLog"})})]}),(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"clearLocalDeleteLog"})}),(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"clearSyncLog"})})]}),(0,c.jsxs)(l.tr,{children:[(0,c.jsx)(l.td,{children:(0,c.jsx)(l.code,{children:"clearAllLocalDeleteLog"})}),(0,c.jsxs)(l.td,{children:[(0,c.jsx)(l.code,{children:"clearSyncLog"})," (global/all scope)"]})]})]})]}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsx)(l.h2,{id:"why-deprecated",children:"Why Deprecated?"}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsx)(l.li,{children:"Unified API is simpler to reason about (one source of truth for created / updated / deleted checkpoints)."}),"\n",(0,c.jsx)(l.li,{children:"Fewer edge cases; consistent paging and status writes."}),"\n",(0,c.jsx)(l.li,{children:"Cleaner surface for public usage."}),"\n"]}),"\n",(0,c.jsx)(l.hr,{}),"\n",(0,c.jsx)(l.h2,{id:"related-docs",children:"Related Docs"}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsx)(l.li,{children:(0,c.jsx)(l.a,{href:"/supastash/docs/useSupastashData",children:"Data Access"})}),"\n",(0,c.jsx)(l.li,{children:(0,c.jsx)(l.a,{href:"/supastash/docs/useSupastash-hook",children:"useSupastash Hook"})}),"\n",(0,c.jsx)(l.li,{children:(0,c.jsx)(l.a,{href:"/supastash/docs/supastash-query-builder",children:"Query Builder"})}),"\n"]})]})}function h(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,c.jsx)(l,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}},8453:(e,l,s)=>{s.d(l,{R:()=>r,x:()=>a});var n=s(6540);const c={},t=n.createContext(c);function r(e){const l=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function a(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),n.createElement(t.Provider,{value:l},e.children)}}}]);