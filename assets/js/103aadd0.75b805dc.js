"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[303],{2025:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"zustand","title":"zustand","description":"\ud83d\udd01 Zustand Store Auto-Hydration via Supastash Events","source":"@site/docs/zustand.md","sourceDirName":".","slug":"/zustand","permalink":"/supastash/docs/zustand","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/zustand.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"useSupastashData","permalink":"/supastash/docs/useSupastashData"},"next":{"title":"Configuration","permalink":"/supastash/docs/configuration"}}');var a=n(4848),r=n(8453);const o={},i=void 0,d={},h=[{value:"\ud83d\udd01 Zustand Store Auto-Hydration via Supastash Events",id:"-zustand-store-auto-hydration-via-supastash-events",level:2},{value:"\ud83e\udde0 Why This Matters",id:"-why-this-matters",level:3},{value:"\ud83d\udea8 The Supastash Event Format",id:"-the-supastash-event-format",level:3},{value:"\ud83d\udd28 How to Hydrate Zustand on Change",id:"-how-to-hydrate-zustand-on-change",level:3},{value:"\ud83e\uddea How to Use <code>useHydrateStores</code>",id:"-how-to-use-usehydratestores",level:3},{value:"\ud83d\udca7 What Does a <code>hydrate</code> Function Do?",id:"-what-does-a-hydrate-function-do",level:3},{value:"\u2699\ufe0f Too Many Listeners?",id:"\ufe0f-too-many-listeners",level:3},{value:"\u2705 Benefits of This Pattern",id:"-benefits-of-this-pattern",level:3},{value:"\u2705 TL;DR",id:"-tldr",level:3}];function l(e){const s={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"-zustand-store-auto-hydration-via-supastash-events",children:"\ud83d\udd01 Zustand Store Auto-Hydration via Supastash Events"}),"\n",(0,a.jsxs)(s.p,{children:["Supastash emits ",(0,a.jsx)(s.strong,{children:"automatic refresh events"})," for tables whenever local changes occur \u2014 whether from syncing, user updates, or mutations. These events allow you to ",(0,a.jsx)(s.strong,{children:"hydrate your Zustand stores"})," (or any state container) with fresh data without having to manually track when something changed."]}),"\n",(0,a.jsxs)(s.p,{children:["You don\u2019t need to call anything \u2014 just ",(0,a.jsx)(s.strong,{children:"subscribe to the right event and update your store"}),"."]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"-why-this-matters",children:"\ud83e\udde0 Why This Matters"}),"\n",(0,a.jsx)(s.p,{children:"In local-first apps, keeping your UI in sync with the local database is essential. But polling or manually reloading data on every change is inefficient and error-prone."}),"\n",(0,a.jsx)(s.p,{children:"Supastash solves this with:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["\u2705 ",(0,a.jsx)(s.strong,{children:"Internal refresh tracking"})]}),"\n",(0,a.jsxs)(s.li,{children:["\ud83d\udd01 ",(0,a.jsx)(s.strong,{children:"Debounced event emissions"})]}),"\n",(0,a.jsxs)(s.li,{children:["\ud83e\uddf5 ",(0,a.jsx)(s.strong,{children:"Per-table precision"})]}),"\n",(0,a.jsxs)(s.li,{children:["\ud83d\udd0c ",(0,a.jsx)(s.strong,{children:"Zustand-ready integration"})]}),"\n"]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"-the-supastash-event-format",children:"\ud83d\udea8 The Supastash Event Format"}),"\n",(0,a.jsx)(s.p,{children:"Whenever a table changes (via local insert/update/delete), Supastash emits:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:'const ZUSTAND_PREFIX = "supastash:refreshZustand:";\n'})}),"\n",(0,a.jsxs)(s.p,{children:["So for the ",(0,a.jsx)(s.code,{children:"sales"})," table, this emits:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:'"supastash:refreshZustand:sales";\n'})}),"\n",(0,a.jsx)(s.p,{children:"You can subscribe to this with:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:'supastashEventBus.on("supastash:refreshZustand:sales", hydrateSales);\n'})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"-how-to-hydrate-zustand-on-change",children:"\ud83d\udd28 How to Hydrate Zustand on Change"}),"\n",(0,a.jsxs)(s.p,{children:["Create a reusable hook to ",(0,a.jsx)(s.strong,{children:"automatically subscribe"})," to refresh events and ",(0,a.jsx)(s.strong,{children:"rehydrate stores"}),":"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:'import { useEffect } from "react";\nimport { supastashEventBus } from "supastash";\n\nconst ZUSTAND_PREFIX = "supastash:refreshZustand:";\n\nconst HYDRATE_HANDLERS = {\n  sales: async () => {\n    await useSalesStore.getState().hydrateSales();\n  },\n  customers: async () => {\n    await useCustomersStore.getState().hydrateCustomers();\n  },\n  // Add more table hydration handlers here...\n};\n\nexport function useHydrateStores() {\n  useEffect(() => {\n    for (const [table, handler] of Object.entries(HYDRATE_HANDLERS)) {\n      const event = `${ZUSTAND_PREFIX}${table}`;\n      supastashEventBus.on(event, handler);\n    }\n\n    return () => {\n      for (const [table, handler] of Object.entries(HYDRATE_HANDLERS)) {\n        const event = `${ZUSTAND_PREFIX}${table}`;\n        supastashEventBus.off(event, handler);\n      }\n    };\n  }, []);\n}\n'})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsxs)(s.h3,{id:"-how-to-use-usehydratestores",children:["\ud83e\uddea How to Use ",(0,a.jsx)(s.code,{children:"useHydrateStores"})]}),"\n",(0,a.jsxs)(s.p,{children:["Call this hook ",(0,a.jsx)(s.strong,{children:"once"})," at the root of your app (or in a top-level layout/screen) to enable auto-hydration:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"export default function AppLayout() {\n  useHydrateStores(); // \ud83d\udc48 enables all auto-hydration events\n\n  return (\n    <NavigationContainer>\n      <AppNavigator />\n    </NavigationContainer>\n  );\n}\n"})}),"\n",(0,a.jsx)(s.p,{children:"You can also scope it to specific screens if needed."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsxs)(s.h3,{id:"-what-does-a-hydrate-function-do",children:["\ud83d\udca7 What Does a ",(0,a.jsx)(s.code,{children:"hydrate"})," Function Do?"]}),"\n",(0,a.jsxs)(s.p,{children:["Each hydrate function is just a ",(0,a.jsx)(s.strong,{children:"data fetch + Zustand update"}),":"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:'import { create } from "zustand";\n\nconst prevLimit = 100;\n\nexport const useSalesStore = create((set) => ({\n  sales: [],\n  hydrateSales: async (newLimit = prevLimit) => {\n    const { data: sales } = await supastash\n      .from("sales")\n      .select("*")\n      .is("deleted_at", null)\n      .limit(newLimit)\n      .run();\n\n    if (sales) set({ sales });\n  },\n}));\n'})}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:["You can narrow results using ",(0,a.jsx)(s.code,{children:'.eq("shop_id", currentShopId)'})," or ",(0,a.jsx)(s.code,{children:'.gt("updated_at", lastFetched)'}),"."]}),"\n"]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"\ufe0f-too-many-listeners",children:"\u2699\ufe0f Too Many Listeners?"}),"\n",(0,a.jsxs)(s.p,{children:["If you're listening to many tables and notice a ",(0,a.jsx)(s.strong,{children:"MaxListenersExceededWarning"}),", you can safely raise the listener limit."]}),"\n",(0,a.jsxs)(s.p,{children:["Use ",(0,a.jsx)(s.code,{children:"configureSupastash()"})," to increase it:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"configureSupastash({\n  // ...other config\n  listeners: 500, // increase from default 250\n});\n"})}),"\n",(0,a.jsx)(s.p,{children:"This ensures your app doesn't run into limits as more tables or hooks subscribe to refresh events."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"-benefits-of-this-pattern",children:"\u2705 Benefits of This Pattern"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Feature"}),(0,a.jsx)(s.th,{children:"Benefit"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"\ud83d\udd01 Auto-refresh"}),(0,a.jsx)(s.td,{children:"Always fresh data after sync or local change"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"\ud83e\uddfc Centralized hydration"}),(0,a.jsx)(s.td,{children:"No scattered refresh logic"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"\u26a1 Efficient and debounced"}),(0,a.jsx)(s.td,{children:"Won\u2019t over-fetch or re-render too often"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"\ud83e\udde9 Easy to extend"}),(0,a.jsxs)(s.td,{children:["Add any new table by wiring one ",(0,a.jsx)(s.code,{children:"hydrateX()"})]})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"\ud83e\udd1d Works with Zustand"}),(0,a.jsx)(s.td,{children:"Or any other state system (Valtio, Jotai, etc.)"})]})]})]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"-tldr",children:"\u2705 TL;DR"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Supastash emits per-table refresh events like ",(0,a.jsx)(s.code,{children:"supastash:refreshZustand:sales"})]}),"\n",(0,a.jsxs)(s.li,{children:["You can hook into them using ",(0,a.jsx)(s.code,{children:"supastashEventBus"})]}),"\n",(0,a.jsxs)(s.li,{children:["Hydrate your Zustand store with fresh local data using ",(0,a.jsx)(s.code,{children:".select().run()"})]}),"\n",(0,a.jsxs)(s.li,{children:["Everything is ",(0,a.jsx)(s.strong,{children:"debounced"}),", scoped, and efficient by design"]}),"\n",(0,a.jsxs)(s.li,{children:["Use ",(0,a.jsx)(s.code,{children:"useHydrateStores()"})," at the top level of your app to enable all hydration events"]}),"\n"]})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var t=n(6540);const a={},r=t.createContext(a);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);