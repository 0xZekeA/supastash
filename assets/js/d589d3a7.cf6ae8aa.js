"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[7924],{6475:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"getting-started","title":"\ud83d\ude80 Getting Started with Supastash","description":"Supastash helps you build offline-first apps by syncing local SQLite with Supabase \u2014 all in the background.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/supastash/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/getting-started.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Supastash Query Builder","permalink":"/supastash/docs/supastash-query-builder"}}');var t=n(4848),i=n(8453);const r={},l="\ud83d\ude80 Getting Started with Supastash",d={},o=[{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"1. Install Supastash",id:"1-install-supastash",level:3},{value:"2. Install Required Peer Dependencies",id:"2-install-required-peer-dependencies",level:3},{value:"3. Choose ONE SQLite Adapter",id:"3-choose-one-sqlite-adapter",level:3},{value:"\u2699\ufe0f Project Setup",id:"\ufe0f-project-setup",level:2},{value:"1. Configure Supastash",id:"1-configure-supastash",level:3},{value:"2. Initialize Once in Your App",id:"2-initialize-once-in-your-app",level:3},{value:"\ud83d\udee1\ufe0f Server-Side Setup (for Filtered Pulls)",id:"\ufe0f-server-side-setup-for-filtered-pulls",level:2},{value:"\u2699\ufe0f Wait for Initialization Before Rendering",id:"\ufe0f-wait-for-initialization-before-rendering",level:2},{value:"\ud83e\udde0 Optional: Zustand Auto-Hydration",id:"-optional-zustand-auto-hydration",level:3},{value:"\ud83d\udce1 Data Fetching Options",id:"-data-fetching-options",level:2},{value:"\ud83e\udde0 <code>useSupastashData</code> \u2013 Full Sync, Realtime-Aware",id:"-usesupastashdata--full-sync-realtime-aware",level:3},{value:"\ud83e\udde9 Dynamic Filtering (All Hooks)",id:"-dynamic-filtering-all-hooks",level:2},{value:"\ud83d\udee1\ufe0f Registering Table Filters: <code>useSupastashFilters</code>",id:"\ufe0f-registering-table-filters-usesupastashfilters",level:2},{value:"\ud83d\udd0d One-Off Queries with Supabase",id:"-one-off-queries-with-supabase",level:2},{value:"\ud83d\udd27 Debugging",id:"-debugging",level:2},{value:"\u2705 Next Steps",id:"-next-steps",level:2}];function u(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"-getting-started-with-supastash",children:"\ud83d\ude80 Getting Started with Supastash"})}),"\n",(0,t.jsxs)(s.p,{children:["Supastash helps you build ",(0,t.jsx)(s.strong,{children:"offline-first apps"})," by syncing local SQLite with Supabase \u2014 all in the background.\nWhether you're building a point-of-sale, chat, delivery, or CRM app, Supastash gives you ",(0,t.jsx)(s.strong,{children:"control, performance, and reliability"})," even when users are offline."]}),"\n",(0,t.jsx)(s.p,{children:"This guide walks you through setting it up from scratch."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-installation",children:"\ud83d\udce6 Installation"}),"\n",(0,t.jsx)(s.h3,{id:"1-install-supastash",children:"1. Install Supastash"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"npm install supastash\n"})}),"\n",(0,t.jsx)(s.h3,{id:"2-install-required-peer-dependencies",children:"2. Install Required Peer Dependencies"}),"\n",(0,t.jsx)(s.p,{children:"These must be installed manually:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"npm install @supabase/supabase-js \\\n             @react-native-community/netinfo \\\n             react \\\n             react-native\n"})}),"\n",(0,t.jsx)(s.h3,{id:"3-choose-one-sqlite-adapter",children:"3. Choose ONE SQLite Adapter"}),"\n",(0,t.jsx)(s.p,{children:"Pick the adapter based on your project setup:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# For Expo projects\nnpm install expo-sqlite\n\n# For bare React Native (better performance)\nnpm install react-native-nitro-sqlite\n\n# Classic RN SQLite adapter (still in beta)\nnpm install react-native-sqlite-storage\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"\ufe0f-project-setup",children:"\u2699\ufe0f Project Setup"}),"\n",(0,t.jsx)(s.h3,{id:"1-configure-supastash",children:"1. Configure Supastash"}),"\n",(0,t.jsxs)(s.p,{children:["Set this up early \u2014 e.g., ",(0,t.jsx)(s.code,{children:"lib/supastash.ts"})]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'import { configureSupastash, defineLocalSchema } from "supastash";\nimport { supabase } from "./supabase";\nimport { openDatabaseAsync } from "expo-sqlite"; // or your adapter\n\nconfigureSupastash({\n  supabaseClient: supabase,\n  dbName: "supastash_db",\n  sqliteClient: { openDatabaseAsync },\n  sqliteClientType: "expo", // "rn-nitro" or "rn-storage"\n\n  onSchemaInit: () => {\n    defineLocalSchema("users", {\n      id: "TEXT PRIMARY KEY",\n      name: "TEXT",\n      email: "TEXT",\n      created_at: "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",\n      updated_at: "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",\n      __indices: ["email", "user_id"],\n    });\n  },\n\n  debugMode: true,\n  syncEngine: {\n    push: true,\n    pull: false, // Enable if you\'re using RLS or useSupastashFilters\n  },\n  excludeTables: {\n    push: ["daily_reminders"],\n    pull: ["daily_reminders"],\n  },\n});\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"2-initialize-once-in-your-app",children:"2. Initialize Once in Your App"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'// App.tsx or _layout.tsx\nimport "@/lib/supastash"; // Triggers initialization\n\nexport default function App() {\n  return <Stack />; // or your app shell\n}\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"\ufe0f-server-side-setup-for-filtered-pulls",children:"\ud83d\udee1\ufe0f Server-Side Setup (for Filtered Pulls)"}),"\n",(0,t.jsxs)(s.p,{children:["To enable safe, filtered data pulling from Supabase, run this SQL function:\n\u2705 ",(0,t.jsx)(s.strong,{children:"This is Required"})]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sql",children:"create or replace function get_table_schema(table_name text)\nreturns table(column_name text, data_type text, is_nullable text)\nsecurity definer\nas $$\n  select column_name, data_type, is_nullable\n  from information_schema.columns\n  where table_schema = 'public' and table_name = $1;\n$$ language sql;\n\ngrant execute on function get_table_schema(text) to anon, authenticated;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["\u26a0\ufe0f Make sure all sync-related timestamps (",(0,t.jsx)(s.code,{children:"created_at"}),", ",(0,t.jsx)(s.code,{children:"updated_at"}),", ",(0,t.jsx)(s.code,{children:"deleted_at"}),") use ",(0,t.jsx)(s.code,{children:"timestamptz"})," \u2014 not plain ",(0,t.jsx)(s.code,{children:"timestamp"})," to avoid timezone drift, inconsistent sync ordering, and data mismatches across devices. ."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"\ufe0f-wait-for-initialization-before-rendering",children:"\u2699\ufe0f Wait for Initialization Before Rendering"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'import { useSupatash } from "supastash";\n\nconst { dbReady } = useSupatash();\nif (!dbReady) return null;\n\nreturn <AppRoutes />;\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"-optional-zustand-auto-hydration",children:"\ud83e\udde0 Optional: Zustand Auto-Hydration"}),"\n",(0,t.jsxs)(s.p,{children:["If you're using Zustand for state management, you can ",(0,t.jsx)(s.strong,{children:"automatically sync your stores"})," with local Supastash data \u2014 no need to manually reload after every change."]}),"\n",(0,t.jsxs)(s.p,{children:["Whenever a table like ",(0,t.jsx)(s.code,{children:"orders"})," is updated (via sync or local change), Supastash emits:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'supastashEventBus.on("supastash:refreshZustand:orders", () => {\n  // Your hydrate call\n});\n'})}),"\n",(0,t.jsxs)(s.p,{children:["This allows you to call your Zustand store's ",(0,t.jsx)(s.code,{children:"hydrateOrders()"})," method to fetch the latest local data."]}),"\n",(0,t.jsxs)(s.p,{children:["\u2705 Tip: Set this up in a reusable hook like ",(0,t.jsx)(s.code,{children:"useHydrateStores()"})," so your app stays up-to-date in the background."]}),"\n",(0,t.jsxs)(s.p,{children:["\ud83d\udc49 ",(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/zustand",children:"Read integration with zustand"})})," for full examples and best practices."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-data-fetching-options",children:"\ud83d\udce1 Data Fetching Options"}),"\n",(0,t.jsxs)(s.p,{children:["Supastash gives you ",(0,t.jsx)(s.a,{href:"/supastash/docs/useSupastashData",children:(0,t.jsx)(s.code,{children:"useSupastashData"})})," for fetching and syncing local data:"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"-usesupastashdata--full-sync-realtime-aware",children:["\ud83e\udde0 ",(0,t.jsx)(s.a,{href:"/supastash/docs/useSupastashData",children:(0,t.jsx)(s.code,{children:"useSupastashData"})})," \u2013 Full Sync, Realtime-Aware"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'const { data, dataMap, groupedBy } = useSupastashData("orders", {\n  filter: { column: "user_id", operator: "eq", value: userId },\n  extraMapKeys: ["status"],\n});\n'})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Syncs with Supabase in ",(0,t.jsx)(s.strong,{children:"realtime"})]}),"\n",(0,t.jsxs)(s.li,{children:["Uses ",(0,t.jsx)(s.strong,{children:"global cache"})]}),"\n",(0,t.jsx)(s.li,{children:"Automatically keeps state synced"}),"\n",(0,t.jsx)(s.li,{children:"Best for dashboards, shared state, live data"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-dynamic-filtering-all-hooks",children:"\ud83e\udde9 Dynamic Filtering (All Hooks)"}),"\n",(0,t.jsx)(s.p,{children:"Supastash lets you filter synced data based on user, shop, etc."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'const { data } = useSupastashData("orders", {\n  filter: {\n    column: "user_id",\n    operator: "eq",\n    value: currentUserId,\n  }, // RealtimeFilter\n  sqlFilter: [{ column: "user_id", operator: "eq", value: currentUserId }], //sql (optional)\n});\n'})}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["\ud83d\udca1 ",(0,t.jsx)(s.code,{children:"filter"})," = for Supabase realtime\n\ud83d\udca1 ",(0,t.jsx)(s.code,{children:"sqlFilter"})," = for actual query filtering"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h2,{id:"\ufe0f-registering-table-filters-usesupastashfilters",children:["\ud83d\udee1\ufe0f Registering Table Filters: ",(0,t.jsx)(s.a,{href:"/supastash/docs/useSupastashFilters",children:(0,t.jsx)(s.code,{children:"useSupastashFilters"})})]}),"\n",(0,t.jsxs)(s.p,{children:["If you\u2019re pulling data (i.e., using ",(0,t.jsx)(s.code,{children:"pull: true"})," in ",(0,t.jsx)(s.a,{href:"/supastash/docs/configuration",children:(0,t.jsx)(s.code,{children:"configureSupastash"})}),"), always call this hook at startup:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'useSupastashFilters({\n  orders: [{ column: "shop_id", operator: "eq", value: activeShopId }],\n  inventory: [\n    { column: "location_id", operator: "eq", value: selectedLocation },\n  ],\n});\n'})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Ensures only ",(0,t.jsx)(s.strong,{children:"scoped rows"})," are pulled from Supabase"]}),"\n",(0,t.jsx)(s.li,{children:"Prevents unnecessary or insecure full-table syncs"}),"\n",(0,t.jsx)(s.li,{children:"Validates your filters and warns you if anything\u2019s wrong"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-one-off-queries-with-supabase",children:"\ud83d\udd0d One-Off Queries with Supabase"}),"\n",(0,t.jsx)(s.p,{children:"Use Supastash's built-in wrapper for direct Supabase access:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'import { supastash } from "supastash";\n\nconst { data, error } = await supastash.from("orders").select("*").run();\n'})}),"\n",(0,t.jsxs)(s.p,{children:["It works just like ",(0,t.jsx)(s.code,{children:"supabase.from(...)"}),", but ensures it respects your Supastash config."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-debugging",children:"\ud83d\udd27 Debugging"}),"\n",(0,t.jsxs)(s.p,{children:["Enable ",(0,t.jsx)(s.code,{children:"debugMode: true"})," to log sync events, retries, or failures:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"configureSupastash({\n  ...,\n  debugMode: true,\n});\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-next-steps",children:"\u2705 Next Steps"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/useSupastashData",children:"useSupastashData Docs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/zustand",children:"Zustand integration"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/useSupastashFilters",children:"useSupastashFilters Docs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/supastash-query-builder",children:"Query Builder"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/schema-management",children:"Advanced Schema Setup"})}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["That\u2019s it \u2014 you're now ready to build ",(0,t.jsx)(s.strong,{children:"offline-first"}),", ",(0,t.jsx)(s.strong,{children:"scalable"}),", and ",(0,t.jsx)(s.strong,{children:"Supabase-powered"})," apps using Supastash."]})]})}function c(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var a=n(6540);const t={},i=a.createContext(t);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);