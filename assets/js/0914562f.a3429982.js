"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[3744],{7853:(e,s,l)=>{l.r(s),l.d(s,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"destructives","title":"Destructive Operations","description":"These functions clear only the local SQLite data \u2014 your Supabase cloud data remains safe and untouched.","source":"@site/docs/destructives.md","sourceDirName":".","slug":"/destructives","permalink":"/supastash/docs/destructives","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/destructives.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"schema-management","permalink":"/supastash/docs/schema-management"},"next":{"title":"\ud83d\udcda Sync Log Utilities","permalink":"/supastash/docs/sync-log-utils"}}');var n=l(4848),i=l(8453);const r={},t="Destructive Operations",o={},d=[{value:"\ud83d\udd25 <code>wipeTable(tableName: string): Promise&lt;void&gt;</code>",id:"-wipetabletablename-string-promisevoid",level:2},{value:"\u2705 Use Cases",id:"-use-cases",level:3},{value:"Example:",id:"example",level:3},{value:"\ud83d\udd25 <code>wipeAllTables(): Promise&lt;void&gt;</code>",id:"-wipealltables-promisevoid",level:2},{value:"\u2705 Use case:",id:"-use-case",level:3},{value:"Example:",id:"example-1",level:3},{value:"\ud83e\uddf9 <code>wipeOldDataForATable(tableName: string, daysFromNow: number): Promise&lt;void&gt;</code>",id:"-wipeolddataforatabletablename-string-daysfromnow-number-promisevoid",level:2},{value:"\u2705 Use Cases:",id:"-use-cases-1",level:3},{value:"Example:",id:"example-2",level:3},{value:"\ud83e\uddf9 <code>wipeOldDataForAllTables(daysFromNow: number, excludeTables?: string[]): Promise&lt;void&gt;</code>",id:"-wipeolddataforalltablesdaysfromnow-number-excludetables-string-promisevoid",level:2},{value:"\u2705 Use case:",id:"-use-case-1",level:3},{value:"Example:",id:"example-3",level:3},{value:"\u2699\ufe0f Notes",id:"\ufe0f-notes",level:3},{value:"\ud83d\udd17 What\u2019s Next?",id:"-whats-next",level:3}];function c(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"destructive-operations",children:"Destructive Operations"})}),"\n",(0,n.jsxs)(s.p,{children:["These functions clear ",(0,n.jsx)(s.strong,{children:"only the local SQLite data"})," \u2014 your Supabase cloud data remains safe and untouched.\nThey're useful for development, clearing cache, or resetting the app\u2019s local state."]}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"\u26a0\ufe0f Use carefully in production. Some methods are irreversible."}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h2,{id:"-wipetabletablename-string-promisevoid",children:["\ud83d\udd25 ",(0,n.jsx)(s.code,{children:"wipeTable(tableName: string): Promise<void>"})]}),"\n",(0,n.jsx)(s.p,{children:"Drops a single local table from SQLite and deletes its sync metadata."}),"\n",(0,n.jsx)(s.h3,{id:"-use-cases",children:"\u2705 Use Cases"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Development-only data resets"}),"\n",(0,n.jsx)(s.li,{children:"Handling corruption or issues in a specific table"}),"\n",(0,n.jsx)(s.li,{children:"Manually removing local data for feature-specific tables during offboarding or cleanup"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example",children:"Example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'await wipeTable("users");\n'})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h2,{id:"-wipealltables-promisevoid",children:["\ud83d\udd25 ",(0,n.jsx)(s.code,{children:"wipeAllTables(): Promise<void>"})]}),"\n",(0,n.jsxs)(s.p,{children:["Drops ",(0,n.jsx)(s.strong,{children:"all local tables"})," managed by Supastash and wipes sync metadata."]}),"\n",(0,n.jsx)(s.h3,{id:"-use-case",children:"\u2705 Use case:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Full app data reset"}),"\n",(0,n.jsx)(s.li,{children:"Logout flows"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example-1",children:"Example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"await wipeAllTables();\n"})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h2,{id:"-wipeolddataforatabletablename-string-daysfromnow-number-promisevoid",children:["\ud83e\uddf9 ",(0,n.jsx)(s.code,{children:"wipeOldDataForATable(tableName: string, daysFromNow: number): Promise<void>"})]}),"\n",(0,n.jsxs)(s.p,{children:["Deletes records from a specified table that are older than the given ",(0,n.jsx)(s.code,{children:"daysFromNow"})," value.\nRequires a ",(0,n.jsx)(s.code,{children:"created_at"})," column to work correctly."]}),"\n",(0,n.jsx)(s.h3,{id:"-use-cases-1",children:"\u2705 Use Cases:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Freeing up storage space"}),"\n",(0,n.jsx)(s.li,{children:"Automatically removing stale or outdated data"}),"\n",(0,n.jsx)(s.li,{children:"Pruning old entries from specific tables"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example-2",children:"Example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'await wipeOldDataForATable("orders", 30); // Deletes records older than 30 days\n'})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h2,{id:"-wipeolddataforalltablesdaysfromnow-number-excludetables-string-promisevoid",children:["\ud83e\uddf9 ",(0,n.jsx)(s.code,{children:"wipeOldDataForAllTables(daysFromNow: number, excludeTables?: string[]): Promise<void>"})]}),"\n",(0,n.jsxs)(s.p,{children:["Deletes old records across all local tables, skipping any in the ",(0,n.jsx)(s.code,{children:"excludeTables"})," list."]}),"\n",(0,n.jsx)(s.h3,{id:"-use-case-1",children:"\u2705 Use case:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Periodic cleanup job"}),"\n",(0,n.jsx)(s.li,{children:"Disk/memory usage reduction"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example-3",children:"Example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'await wipeOldDataForAllTables(60, ["settings", "user_preferences"]);\n'})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"\ufe0f-notes",children:"\u2699\ufe0f Notes"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"All functions access the local SQLite DB only."}),"\n",(0,n.jsxs)(s.li,{children:["Deletion is ",(0,n.jsx)(s.strong,{children:"not recoverable"})," in production."]}),"\n",(0,n.jsx)(s.li,{children:"wipe"}),"\n",(0,n.jsxs)(s.li,{children:["These functions are safe to call from ",(0,n.jsx)(s.code,{children:"onSchemaInit"})," in your ",(0,n.jsx)(s.a,{href:"/supastash/docs/configuration",children:(0,n.jsx)(s.code,{children:"configureSupastash"})})," setup."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"-whats-next",children:"\ud83d\udd17 What\u2019s Next?"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/supastash/docs/useSupastashData",children:"Data Access docs"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/supastash/docs/useSupastash-hook",children:"useSupastash docs"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,s,l)=>{l.d(s,{R:()=>r,x:()=>t});var a=l(6540);const n={},i=a.createContext(n);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);