"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[6226],{1756:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"useSupastashFilters","title":"useSupastashFilters","description":"\ud83d\udee1\ufe0f useSupastashFilters","source":"@site/docs/useSupastashFilters.md","sourceDirName":".","slug":"/useSupastashFilters","permalink":"/supastash/docs/useSupastashFilters","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/useSupastashFilters.md","tags":[],"version":"current","frontMatter":{}}');var r=n(4848),l=n(8453);const i={},a=void 0,o={},h=[{value:"\ud83d\udee1\ufe0f <code>useSupastashFilters</code>",id:"\ufe0f-usesupastashfilters",level:2},{value:"\ud83e\udde0 What\u2019s This For?",id:"-whats-this-for",level:3},{value:"\u2699\ufe0f How It Works",id:"\ufe0f-how-it-works",level:3},{value:"\ud83e\uddea Example",id:"-example",level:3},{value:"\ud83e\uddf7 What Does a Filter Look Like?",id:"-what-does-a-filter-look-like",level:3},{value:"\ud83d\udea8 Possible Warnings",id:"-possible-warnings",level:3},{value:"\ud83d\udd17 What\u2019s Next",id:"-whats-next",level:2}];function c(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h2,{id:"\ufe0f-usesupastashfilters",children:["\ud83d\udee1\ufe0f ",(0,r.jsx)(s.code,{children:"useSupastashFilters"})]}),"\n",(0,r.jsxs)(s.p,{children:["A simple but ",(0,r.jsx)(s.strong,{children:"critical hook"})," that tells Supastash ",(0,r.jsx)(s.em,{children:"what rows"})," to sync from Supabase \u2014 ",(0,r.jsx)(s.strong,{children:"table by table"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["If your app has ",(0,r.jsx)(s.strong,{children:"multiple users"}),", ",(0,r.jsx)(s.strong,{children:"locations"}),", or ",(0,r.jsx)(s.strong,{children:"shops"}),", you don't want to sync ",(0,r.jsx)(s.em,{children:"everything"}),". You only want ",(0,r.jsx)(s.em,{children:"what matters"})," to the current user. That\u2019s exactly what this hook handles."]}),"\n",(0,r.jsxs)(s.p,{children:["You can call the non hook version in functions ",(0,r.jsx)(s.code,{children:"updateFilters"}),". Works the same way!"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"-whats-this-for",children:"\ud83e\udde0 What\u2019s This For?"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"useSupastashFilters()"})," helps you:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Filter"})," what data gets pulled from Supabase"]}),"\n",(0,r.jsx)(s.li,{children:"Make sure your app doesn't fetch other users\u2019 or locations\u2019 data"}),"\n",(0,r.jsxs)(s.li,{children:["Avoid bugs caused by ",(0,r.jsx)(s.strong,{children:"invalid filters"})," or ",(0,r.jsx)(s.strong,{children:"wrong sync conditions"})]}),"\n",(0,r.jsxs)(s.li,{children:["Keep your app ",(0,r.jsx)(s.strong,{children:"in sync and secure"})," across devices"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"\ufe0f-how-it-works",children:"\u2699\ufe0f How It Works"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["You pass in a simple object where each key is a ",(0,r.jsx)(s.strong,{children:"table name"})," (like ",(0,r.jsx)(s.code,{children:'"orders"'}),"), and the value is a list of ",(0,r.jsx)(s.strong,{children:"filter rules"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Each filter tells Supastash: ",(0,r.jsx)(s.em,{children:'"Only pull rows where this column matches this value."'})]}),"\n",(0,r.jsx)(s.li,{children:"It checks for mistakes \u2014 like typos or bad operators \u2014 and shows helpful warnings if anything\u2019s wrong."}),"\n",(0,r.jsx)(s.li,{children:"Valid filters are saved and used every time Supastash syncs that table."}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"-example",children:"\ud83e\uddea Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'useSupastashFilters({\n  orders: [\n    { column: "shop_id", operator: "eq", value: currentShopId },\n    { column: "status", operator: "in", value: ["pending", "completed"] },\n  ],\n  inventory: [\n    { column: "location_id", operator: "eq", value: selectedLocationId },\n  ],\n});\n'})}),"\n",(0,r.jsx)(s.p,{children:"In this example:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Only ",(0,r.jsx)(s.code,{children:"orders"})," that belong to the current shop and have ",(0,r.jsx)(s.code,{children:"pending"})," or ",(0,r.jsx)(s.code,{children:"completed"})," status will sync."]}),"\n",(0,r.jsxs)(s.li,{children:["Only ",(0,r.jsx)(s.code,{children:"inventory"})," tied to the selected location will sync."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Simple, scoped, and safe."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"-what-does-a-filter-look-like",children:"\ud83e\uddf7 What Does a Filter Look Like?"}),"\n",(0,r.jsx)(s.p,{children:"Each filter must include:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'{\n  column: "shop_id",         // the column you\'re filtering by\n  operator: "eq",            // the condition: eq, in, gt, lt, etc.\n  value: "abc123"            // the value to match (string, number, array, or null)\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:"Operators include:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:'"eq"'})," (equal)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:'"in"'})," (value is in an array)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:'"gt"'})," / ",(0,r.jsx)(s.code,{children:'"lt"'})," / ",(0,r.jsx)(s.code,{children:'"gte"'})," / ",(0,r.jsx)(s.code,{children:'"lte"'})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:'"is"'})," (for ",(0,r.jsx)(s.code,{children:"null"}),", ",(0,r.jsx)(s.code,{children:"true"}),", or ",(0,r.jsx)(s.code,{children:"false"}),")"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"-possible-warnings",children:"\ud83d\udea8 Possible Warnings"}),"\n",(0,r.jsx)(s.p,{children:"Supastash is designed to help you avoid silent bugs. You might see:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Invalid filter warning"}),"\nExample:\n",(0,r.jsx)(s.code,{children:"[Supastash] Invalid filter: { column: '', operator: 'eq', value: '...' } for table orders"}),"\n\u2192 You left something out or used a bad operator."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Unknown table warning"}),"\n",(0,r.jsx)(s.code,{children:"[Supastash] Table products does not exist"}),"\n\u2192 You\u2019re trying to filter a table that hasn\u2019t been defined locally."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Filter mismatch warning"}),"\n",(0,r.jsx)(s.code,{children:"[Supastash] Filter signature mismatch for table  orders"}),"\n\u2192 You\u2019re using different filters for the same table across multiple hook calls. That can break sync logic."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"\n- Always set filters for **every table that syncs**, unless you have strict RLS (Row Level Security) rules on Supabase.\n\n---\n\n### \u2705 Real-World Use Cases\n\n| App Type       | What to Filter By    |\n| -------------- | -------------------- |\n| Multi-shop     | `shop_id`            |\n| Multi-location | `location_id`        |\n| User-specific  | `user_id`            |\n| Soft deletes   | `deleted_at IS NULL` |\n| Active records | `is_active = true`   |\n\n---\n\n### \ud83d\udca5 What Happens If You Skip This?\n\nIf you **don\u2019t use filters** (and don\u2019t have RLS), your app might:\n\n- Pull **all rows** from a table (even for other users)\n- Waste memory and bandwidth\n- Break in production with **missing or mismatched data**\n- Filters will default to realtimeFilters used in the `useSupastashData` hook\n\nSo yeah \u2014 don\u2019t skip this part.\n\n---\n\n### \ud83e\uddf5 TL;DR\n\n`useSupastashFilters()` is your **sync gatekeeper**.\n\nIt makes sure your app _only pulls what it should_, catches mistakes early, and keeps your local-first experience rock solid.\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"-whats-next",children:"\ud83d\udd17 What\u2019s Next"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/supastash/docs/configuration",children:"Configuration Guide"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/supastash/docs/supastash-query-builder",children:"Query Builder Docs"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/supastash/docs/useSupastash-hook",children:"Hook Reference"})}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>a});var t=n(6540);const r={},l=t.createContext(r);function i(e){const s=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(l.Provider,{value:s},e.children)}}}]);