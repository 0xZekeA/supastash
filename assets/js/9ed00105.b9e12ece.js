"use strict";(self.webpackChunksupastash_docs=self.webpackChunksupastash_docs||[]).push([[3873],{8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var l=n(6540);const t={},r=l.createContext(t);function i(e){const s=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),l.createElement(r.Provider,{value:s},e.children)}},8633:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"configuration","title":"\u2699\ufe0f Supastash Configuration","description":"The configureSupastash() function sets up Supastash and must be called once at app startup\u2014typically in your lib/supastash.ts file or before rendering any routes.","source":"@site/docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/supastash/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/0xZekeA/supastash/tree/main/docs-site/docs/configuration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"useSupastashData","permalink":"/supastash/docs/data-access"}}');var t=n(4848),r=n(8453);const i={},d="\u2699\ufe0f Supastash Configuration",c={},a=[{value:"\ud83e\uddf1 Configuration Options",id:"-configuration-options",level:2},{value:"\ud83d\udd01 <code>syncEngine</code> Options",id:"-syncengine-options",level:2},{value:"<code>push</code> (default: <code>true</code>)",id:"push-default-true",level:3},{value:"<code>pull</code> (default: <code>false</code>)",id:"pull-default-false",level:3},{value:"<code>useFiltersFromStore</code> (default: <code>true</code>)",id:"usefiltersfromstore-default-true",level:3},{value:"\ud83d\udca1 Notes",id:"-notes",level:2},{value:"\ud83e\udde0 SQLite Client Types",id:"-sqlite-client-types",level:2},{value:"\ud83d\udd10 Example With RLS Pull Sync Enabled",id:"-example-with-rls-pull-sync-enabled",level:2},{value:"\ud83e\uddfc Resetting or Reconfiguring",id:"-resetting-or-reconfiguring",level:2},{value:"\ud83d\udd17 What\u2019s Next?",id:"-whats-next",level:3}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"\ufe0f-supastash-configuration",children:"\u2699\ufe0f Supastash Configuration"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"configureSupastash()"})," function sets up Supastash and must be called ",(0,t.jsx)(s.strong,{children:"once"})," at app startup\u2014typically in your ",(0,t.jsx)(s.code,{children:"lib/supastash.ts"})," file or before rendering any routes."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'import { configureSupastash, defineLocalSchema } from "supastash";\nimport { supabase } from "./supabase";\nimport { openDatabaseAsync } from "expo-sqlite";\n\nconfigureSupastash({\n  dbName: "supastash_db",\n  supabaseClient: supabase,\n  sqliteClient: { openDatabaseAsync },\n  sqliteClientType: "expo",\n  debugMode: true,\n  onSchemaInit: async () => {\n    defineLocalSchema("users", {\n      id: "TEXT PRIMARY KEY",\n      name: "TEXT",\n      email: "TEXT",\n      created_at: "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",\n      updated_at: "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",\n    });\n  },\n});\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-configuration-options",children:"\ud83e\uddf1 Configuration Options"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Option"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Required"}),(0,t.jsx)(s.th,{children:"Default"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"dbName"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"string"})}),(0,t.jsx)(s.td,{children:"\u2705 Yes"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'"supastash_db"'})}),(0,t.jsx)(s.td,{children:"Name of the local SQLite database."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"supabaseClient"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"SupabaseClient"})}),(0,t.jsx)(s.td,{children:"\u2705 Yes"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"null"})}),(0,t.jsx)(s.td,{children:"A configured instance of your Supabase client."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"sqliteClient"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"object"})}),(0,t.jsx)(s.td,{children:"\u2705 Yes"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"null"})}),(0,t.jsxs)(s.td,{children:["The SQLite adapter instance. Must match the selected ",(0,t.jsx)(s.code,{children:"sqliteClientType"}),"."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"sqliteClientType"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'"expo" | "rn-storage" | "rn-nitro"'})}),(0,t.jsx)(s.td,{children:"\u2705 Yes"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"null"})}),(0,t.jsx)(s.td,{children:"Specifies which SQLite engine you're using."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"onSchemaInit"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"() => Promise<void> | void"})}),(0,t.jsx)(s.td,{children:"\u274c No"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"undefined"})}),(0,t.jsxs)(s.td,{children:["Optional callback to define local tables using ",(0,t.jsx)(s.code,{children:"defineLocalSchema()"}),". Called once after DB creation."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"debugMode"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"boolean"})}),(0,t.jsx)(s.td,{children:"\u274c No"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"Logs internal sync and DB activity for debugging."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"listeners"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"number"})}),(0,t.jsx)(s.td,{children:"\u274c No"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"250"})}),(0,t.jsx)(s.td,{children:"Maximum number of Realtime listeners to attach."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"excludeTables"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"{ pull?: string[], push?: string[] }"})}),(0,t.jsx)(s.td,{children:"\u274c No"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"{ pull: [], push: [] }"})}),(0,t.jsx)(s.td,{children:"Prevents specific tables from being synced (pull/push)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"pollingInterval"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"{ pull?: number, push?: number }"})}),(0,t.jsx)(s.td,{children:"\u274c No"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"{ pull: 30000, push: 30000 }"})}),(0,t.jsx)(s.td,{children:"Interval (ms) for polling Supabase for changes."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"syncEngine"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"{ push?: boolean, pull?: boolean, useFiltersFromStore?: boolean }"})}),(0,t.jsx)(s.td,{children:"\u274c No"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"{ push: true, pull: false, useFiltersFromStore: true }"})}),(0,t.jsx)(s.td,{children:"Controls sync behavior. See below."})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h2,{id:"-syncengine-options",children:["\ud83d\udd01 ",(0,t.jsx)(s.code,{children:"syncEngine"})," Options"]}),"\n",(0,t.jsxs)(s.h3,{id:"push-default-true",children:[(0,t.jsx)(s.code,{children:"push"})," (default: ",(0,t.jsx)(s.code,{children:"true"}),")"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Automatically pushes local changes to Supabase."}),"\n",(0,t.jsx)(s.li,{children:"If disabled, changes are stored locally but not uploaded."}),"\n"]}),"\n",(0,t.jsxs)(s.h3,{id:"pull-default-false",children:[(0,t.jsx)(s.code,{children:"pull"})," (default: ",(0,t.jsx)(s.code,{children:"false"}),")"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Enables automatic background pull sync from Supabase to SQLite."}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Only enable if"})," your tables are protected with RLS or you have safe public filters in place."]}),"\n"]}),"\n",(0,t.jsxs)(s.h3,{id:"usefiltersfromstore-default-true",children:[(0,t.jsx)(s.code,{children:"useFiltersFromStore"})," (default: ",(0,t.jsx)(s.code,{children:"true"}),")"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["When enabled, pull sync applies filters stored during hook usage (e.g., from ",(0,t.jsx)(s.a,{href:"/supastash/docs/data-access",children:(0,t.jsx)(s.code,{children:"useSupatashData()"})}),")."]}),"\n",(0,t.jsx)(s.li,{children:"This ensures only relevant data is pulled even when pull is globally enabled."}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-notes",children:"\ud83d\udca1 Notes"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"configureSupastash()"})," must be called ",(0,t.jsx)(s.strong,{children:"before any hook or sync action"}),"."]}),"\n",(0,t.jsx)(s.li,{children:"Internally sets up the entire sync and storage context."}),"\n",(0,t.jsxs)(s.li,{children:["If you're calling this more than once, or across modules, ensure ",(0,t.jsx)(s.code,{children:"sqliteClientType"})," and ",(0,t.jsx)(s.code,{children:"sqliteClient"})," are consistent."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-sqlite-client-types",children:"\ud83e\udde0 SQLite Client Types"}),"\n",(0,t.jsx)(s.p,{children:"Choose one based on your app\u2019s architecture:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'"expo"'})}),(0,t.jsxs)(s.td,{children:["Uses ",(0,t.jsx)(s.code,{children:"expo-sqlite"}),". Simple and stable for most use cases."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'"rn-nitro"'})}),(0,t.jsxs)(s.td,{children:["Uses ",(0,t.jsx)(s.code,{children:"react-native-nitro-sqlite"}),". Great for performance in large apps."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'"rn-storage"'})}),(0,t.jsxs)(s.td,{children:["Uses ",(0,t.jsx)(s.code,{children:"react-native-sqlite-storage"}),". Legacy option, but widely supported."]})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["Each type expects a different shape for ",(0,t.jsx)(s.code,{children:"sqliteClient"}),". For example:"]}),"\n",(0,t.jsx)(s.p,{children:"For expo"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'sqliteClientType: "expo",\nsqliteClient: { openDatabaseAsync }\n'})}),"\n",(0,t.jsx)(s.p,{children:"For nitro"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'sqliteClientType: "rn-nitro",\nsqliteClient: { open }\n'})}),"\n",(0,t.jsx)(s.p,{children:"For rn-storage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'sqliteClientType: "rn-storage",\nsqliteClient: { openDatabase }\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-example-with-rls-pull-sync-enabled",children:"\ud83d\udd10 Example With RLS Pull Sync Enabled"}),"\n",(0,t.jsxs)(s.p,{children:["Enable ",(0,t.jsx)(s.code,{children:"pull: true"})," only after securing your tables:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"syncEngine: {\n  push: true,\n  pull: true,\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"Make sure to provide filtered hooks like:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'useSupatashData("orders", {\n  filter: { column: "user_id", operator: "eq", value: userId },\n  shouldFetch: !!userId,\n});\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-resetting-or-reconfiguring",children:"\ud83e\uddfc Resetting or Reconfiguring"}),"\n",(0,t.jsx)(s.p,{children:"The config can only be set once per session. To reset:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Restart the app"}),"\n",(0,t.jsxs)(s.li,{children:["Drop and recreate the local DB if necessary using ",(0,t.jsx)(s.a,{href:"/supastash/docs/schema-management",children:(0,t.jsx)(s.code,{children:"defineLocalSchema(..., true)"})}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["\u26a0\ufe0f ",(0,t.jsx)(s.strong,{children:"Avoid setting"})," ",(0,t.jsx)(s.code,{children:"deletePreviousSchema"})," to ",(0,t.jsx)(s.code,{children:"true"})," in production. Use ",(0,t.jsx)(s.a,{href:"/supastash/docs/schema-management",children:(0,t.jsx)(s.code,{children:"defineLocalSchema(...)"})})," without the second argument for safe behavior."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/supastash/docs/data-access",children:(0,t.jsx)(s.code,{children:"useSupastashData(...)"})})," will auto-create tables ",(0,t.jsx)(s.strong,{children:"if"})," the ",(0,t.jsx)(s.a,{href:"/supastash/docs/getting-started",children:(0,t.jsx)(s.code,{children:"get_table_schema"})})," RPC is properly set up on Supabase. (See the Getting Started guide for setup)"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"-whats-next",children:"\ud83d\udd17 What\u2019s Next?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/data-access",children:"Data Access docs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/useSupastash-hook",children:"useSupastash docs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/supastash/docs/supastash-query-builder",children:"Query Builder docs"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);